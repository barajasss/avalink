[{"H:\\freelancing\\avalink\\src\\index.js":"1","H:\\freelancing\\avalink\\src\\App.js":"2","H:\\freelancing\\avalink\\src\\reportWebVitals.js":"3","H:\\freelancing\\avalink\\src\\redux\\store.js":"4","H:\\freelancing\\avalink\\src\\redux\\root.reducer.js":"5","H:\\freelancing\\avalink\\src\\redux\\user\\user.reducer.js":"6","H:\\freelancing\\avalink\\src\\components\\router\\router.component.jsx":"7","H:\\freelancing\\avalink\\src\\pages\\home\\home.component.jsx":"8","H:\\freelancing\\avalink\\src\\pages\\register\\register.component.jsx":"9","H:\\freelancing\\avalink\\src\\components\\logo\\logo.component.jsx":"10","H:\\freelancing\\avalink\\src\\components\\input\\input.component.jsx":"11","H:\\freelancing\\avalink\\src\\pages\\login\\login.component.jsx":"12","H:\\freelancing\\avalink\\src\\pages\\forgot-password\\forgot-password.component.jsx":"13","H:\\freelancing\\avalink\\src\\redux\\user\\user.types.js":"14","H:\\freelancing\\avalink\\src\\redux\\user\\user.actions.js":"15","H:\\freelancing\\avalink\\src\\firebase\\utils\\auth.utils.js":"16","H:\\freelancing\\avalink\\src\\firebase\\firebase.js":"17","H:\\freelancing\\avalink\\src\\pages\\dashboard\\dashboard.component.jsx":"18","H:\\freelancing\\avalink\\src\\components\\loading\\loading.component.jsx":"19","H:\\freelancing\\avalink\\src\\pages\\setting\\setting.component.jsx":"20","H:\\freelancing\\avalink\\src\\components\\logout\\logout.component.jsx":"21","H:\\freelancing\\avalink\\src\\components\\dashboard-header\\dashboard-header.component.jsx":"22","H:\\freelancing\\avalink\\src\\components\\dashboard-user\\dashboard-user.component.jsx":"23","H:\\freelancing\\avalink\\src\\components\\dashboard-links\\dashboard-links.component.jsx":"24","H:\\freelancing\\avalink\\src\\components\\dashboard-link-item\\dashboard-link-item.component.jsx":"25","H:\\freelancing\\avalink\\src\\components\\dashboard-modal\\dashboard-modal.component.jsx":"26","H:\\freelancing\\avalink\\src\\components\\dashboard-modal\\link-editor.component.jsx":"27","H:\\freelancing\\avalink\\src\\components\\dashboard-modal\\link-options.component.jsx":"28","H:\\freelancing\\avalink\\src\\firebase\\utils\\firestore.utils.js":"29","H:\\freelancing\\avalink\\src\\redux\\links\\links.reducer.js":"30","H:\\freelancing\\avalink\\src\\redux\\links\\links.types.js":"31","H:\\freelancing\\avalink\\src\\redux\\links\\links.actions.js":"32","H:\\freelancing\\avalink\\src\\pages\\edit-profile\\edit-profile.component.jsx":"33","H:\\freelancing\\avalink\\src\\components\\dashboard-user\\profile-details.component.jsx":"34","H:\\freelancing\\avalink\\src\\components\\dashboard-user\\edit-profile.component.jsx":"35","H:\\freelancing\\avalink\\src\\pages\\edit-profile\\inline-link-editor.component.jsx":"36","H:\\freelancing\\avalink\\src\\pages\\change-password\\change-password.component.jsx":"37","H:\\freelancing\\avalink\\src\\firebase\\utils\\firebase-storage.utils.js":"38"},{"size":694,"mtime":1608007888726,"results":"39","hashOfConfig":"40"},{"size":2412,"mtime":1608178164238,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":1607511334675,"results":"42","hashOfConfig":"40"},{"size":276,"mtime":1608007783828,"results":"43","hashOfConfig":"40"},{"size":253,"mtime":1608083660849,"results":"44","hashOfConfig":"40"},{"size":930,"mtime":1608207499852,"results":"45","hashOfConfig":"40"},{"size":1970,"mtime":1608195153712,"results":"46","hashOfConfig":"40"},{"size":868,"mtime":1608217156299,"results":"47","hashOfConfig":"40"},{"size":3107,"mtime":1608217701206,"results":"48","hashOfConfig":"40"},{"size":394,"mtime":1608208777842,"results":"49","hashOfConfig":"40"},{"size":483,"mtime":1608016701392,"results":"50","hashOfConfig":"40"},{"size":3223,"mtime":1608217653185,"results":"51","hashOfConfig":"40"},{"size":2312,"mtime":1608217720003,"results":"52","hashOfConfig":"40"},{"size":190,"mtime":1608027256206,"results":"53","hashOfConfig":"40"},{"size":3042,"mtime":1608216813781,"results":"54","hashOfConfig":"40"},{"size":1872,"mtime":1608185445042,"results":"55","hashOfConfig":"40"},{"size":517,"mtime":1608200044722,"results":"56","hashOfConfig":"40"},{"size":2891,"mtime":1608217076028,"results":"57","hashOfConfig":"40"},{"size":221,"mtime":1608027632609,"results":"58","hashOfConfig":"40"},{"size":1334,"mtime":1608217269545,"results":"59","hashOfConfig":"40"},{"size":1051,"mtime":1608052687900,"results":"60","hashOfConfig":"40"},{"size":1519,"mtime":1608208052411,"results":"61","hashOfConfig":"40"},{"size":1169,"mtime":1608208302821,"results":"62","hashOfConfig":"40"},{"size":5324,"mtime":1608216745404,"results":"63","hashOfConfig":"40"},{"size":2522,"mtime":1608210012935,"results":"64","hashOfConfig":"40"},{"size":1672,"mtime":1608180591396,"results":"65","hashOfConfig":"40"},{"size":2705,"mtime":1608180777025,"results":"66","hashOfConfig":"40"},{"size":1771,"mtime":1608103537118,"results":"67","hashOfConfig":"40"},{"size":4678,"mtime":1608216524264,"results":"68","hashOfConfig":"40"},{"size":2133,"mtime":1608207927425,"results":"69","hashOfConfig":"40"},{"size":332,"mtime":1608207574788,"results":"70","hashOfConfig":"40"},{"size":4266,"mtime":1608207723540,"results":"71","hashOfConfig":"40"},{"size":5371,"mtime":1608217131704,"results":"72","hashOfConfig":"40"},{"size":3602,"mtime":1608208365598,"results":"73","hashOfConfig":"40"},{"size":1902,"mtime":1608206074931,"results":"74","hashOfConfig":"40"},{"size":933,"mtime":1608178692983,"results":"75","hashOfConfig":"40"},{"size":3068,"mtime":1608217555227,"results":"76","hashOfConfig":"40"},{"size":934,"mtime":1608206189992,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"68q5jj",{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"80"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"80"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"H:\\freelancing\\avalink\\src\\index.js",[],["164","165"],"H:\\freelancing\\avalink\\src\\App.js",["166"],"import React from 'react'\nimport Router from './components/router/router.component'\nimport firebase from './firebase/firebase'\nimport { Slide, ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport Loading from './components/loading/loading.component'\nimport { Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport {\n\tloginUser,\n\tsetUser,\n\tunsetUser,\n\tresolveAuthState,\n} from './redux/user/user.actions'\n\nimport './App.css'\n\nclass App extends React.Component {\n\tcomponentDidMount = () => {\n\t\tconst {\n\t\t\tsetUser,\n\t\t\tunsetUser,\n\t\t\tresolveAuthState,\n\t\t\tlocation,\n\t\t\tloginUser,\n\t\t} = this.props\n\t\tthis.unsubscribe = firebase.auth().onAuthStateChanged(async user => {\n\t\t\tconsole.log(user, location)\n\t\t\tif (user) {\n\t\t\t\tif (location.state && location.state.from === 'register') {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst { displayName: name, email, uid } = user\n\t\t\t\tawait loginUser({ name, email, uid }, true)\n\t\t\t} else {\n\t\t\t\tunsetUser()\n\t\t\t}\n\t\t\tresolveAuthState()\n\t\t})\n\t}\n\tcomponentWillUnmount() {\n\t\tthis.unsubscribe()\n\t}\n\trender() {\n\t\tconst { isLoggedIn, location, authStateResolved } = this.props\n\t\tconst allowedRoutes = [\n\t\t\t'/setting',\n\t\t\t'/settings',\n\t\t\t'/dashboard',\n\t\t\t'/edit-profile',\n\t\t\t'/register',\n\t\t\t'/change-password',\n\t\t]\n\t\t// Redirect logic for logged users\n\t\tif (\n\t\t\tauthStateResolved &&\n\t\t\tisLoggedIn &&\n\t\t\t!location.pathname.match(/\\/u\\/.+/) &&\n\t\t\t!allowedRoutes.includes(location.pathname) &&\n\t\t\t!location.state\n\t\t) {\n\t\t\treturn <Redirect to='/dashboard' />\n\t\t}\n\n\t\tif (authStateResolved) {\n\t\t\treturn (\n\t\t\t\t<div className='App'>\n\t\t\t\t\t<ToastContainer\n\t\t\t\t\t\tposition='top-right'\n\t\t\t\t\t\tautoClose={3500}\n\t\t\t\t\t\tnewestOnTop={true}\n\t\t\t\t\t\ttransition={Slide}\n\t\t\t\t\t/>\n\t\t\t\t\t<Router />\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Loading />\n\t\t\t\t\t<ToastContainer\n\t\t\t\t\t\tposition='top-right'\n\t\t\t\t\t\tautoClose={3500}\n\t\t\t\t\t\tnewestOnTop={true}\n\t\t\t\t\t\ttransition={Slide}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tisLoggedIn: state.user.isLoggedIn,\n\tauthStateResolved: state.user.authStateResolved,\n})\n\nconst mapDispatchToProps = dispatch => ({\n\tsetUser: user => dispatch(setUser(user)),\n\tunsetUser: () => dispatch(unsetUser()),\n\tresolveAuthState: () => dispatch(resolveAuthState()),\n\tloginUser: (user, opt) => dispatch(loginUser(user, opt)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App))\n","H:\\freelancing\\avalink\\src\\reportWebVitals.js",[],"H:\\freelancing\\avalink\\src\\redux\\store.js",[],"H:\\freelancing\\avalink\\src\\redux\\root.reducer.js",[],"H:\\freelancing\\avalink\\src\\redux\\user\\user.reducer.js",[],"H:\\freelancing\\avalink\\src\\components\\router\\router.component.jsx",[],"H:\\freelancing\\avalink\\src\\pages\\home\\home.component.jsx",[],"H:\\freelancing\\avalink\\src\\pages\\register\\register.component.jsx",[],"H:\\freelancing\\avalink\\src\\components\\logo\\logo.component.jsx",[],"H:\\freelancing\\avalink\\src\\components\\input\\input.component.jsx",[],"H:\\freelancing\\avalink\\src\\pages\\login\\login.component.jsx",[],"H:\\freelancing\\avalink\\src\\pages\\forgot-password\\forgot-password.component.jsx",[],"H:\\freelancing\\avalink\\src\\redux\\user\\user.types.js",[],"H:\\freelancing\\avalink\\src\\redux\\user\\user.actions.js",["167"],"import UserActionTypes from './user.types'\r\nimport {\r\n\tregisterUser as registerUserFirebase,\r\n\tloginUser as loginUserFirebase,\r\n\tlogoutUser as logoutUserFirebase,\r\n\tupdateUser as updateUserFirebase,\r\n\tgetCurrentUser,\r\n} from '../../firebase/utils/auth.utils'\r\nimport {\r\n\tfetchData as fetchDataFirebase,\r\n\tupdateData as updateDataFirebase,\r\n\tgetUserDetailsById,\r\n} from '../../firebase/utils/firestore.utils'\r\n\r\nconst setUser = user => ({\r\n\ttype: UserActionTypes.SET_USER,\r\n\tpayload: user,\r\n})\r\n\r\nconst unsetUser = () => ({\r\n\ttype: UserActionTypes.UNSET_USER,\r\n})\r\n\r\nconst updateUser = (propName, propValue) => ({\r\n\ttype: UserActionTypes.UPDATE_USER,\r\n\tpayload: { propName, propValue },\r\n})\r\n\r\nconst updateUserAsync = (name, value) => async dispatch => {\r\n\t// update user details asynchronously in firebase\r\n\tlet firebaseUpdateProp = name\r\n\tif (name === 'name') {\r\n\t\tfirebaseUpdateProp = 'displayName'\r\n\t\ttry {\r\n\t\t\t// udpate user display name as well as firebase data name\r\n\t\t\tawait updateUserFirebase(firebaseUpdateProp, value)\r\n\t\t\tawait updateDataFirebase(await getCurrentUser(), name, value)\r\n\t\t\tdispatch(updateUser(name, value))\r\n\t\t} catch (err) {\r\n\t\t\tthrow err\r\n\t\t}\r\n\t} else {\r\n\t\ttry {\r\n\t\t\tawait updateDataFirebase(await getCurrentUser(), name, value)\r\n\t\t\tdispatch(updateUser(name, value))\r\n\t\t} catch (err) {\r\n\t\t\tthrow err\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst registerUser = user => async dispatch => {\r\n\ttry {\r\n\t\tawait registerUserFirebase(user)\r\n\t} catch (err) {\r\n\t\tdispatch(unsetUser(user))\r\n\t\tthrow err\r\n\t}\r\n}\r\n\r\nconst resolveAuthState = () => ({\r\n\ttype: UserActionTypes.RESOLVE_AUTH_STATE,\r\n})\r\n\r\nconst loginUser = (user, avoidLogin) => async dispatch => {\r\n\ttry {\r\n\t\tlet loggedUser = {}\r\n\t\tif (!avoidLogin) {\r\n\t\t\t// avoid login is used by app on auth state changed\r\n\t\t\tloggedUser = await loginUserFirebase(user)\r\n\t\t}\r\n\t\tconsole.log(user)\r\n\t\tconst name = await fetchDataFirebase(await getCurrentUser(), 'name')\r\n\t\tconst about = await fetchDataFirebase(await getCurrentUser(), 'about')\r\n\t\tconst email = await fetchDataFirebase(\r\n\t\t\tawait getCurrentUser(),\r\n\t\t\t'emailAddress'\r\n\t\t)\r\n\t\tconst imageUrl = await fetchDataFirebase(\r\n\t\t\tawait getCurrentUser(),\r\n\t\t\t'imageUrl'\r\n\t\t)\r\n\t\tdispatch(\r\n\t\t\tsetUser({\r\n\t\t\t\t...user,\r\n\t\t\t\tabout,\r\n\t\t\t\tname: name || user.name,\r\n\t\t\t\timageUrl,\r\n\t\t\t\temail,\r\n\t\t\t})\r\n\t\t)\r\n\t} catch (err) {\r\n\t\tthrow err\r\n\t}\r\n}\r\n\r\nconst loadUserFromId = id => async dispatch => {\r\n\t// used for loading profile data from url ID even if the user is not logged in.\r\n\ttry {\r\n\t\tconst user = await getUserDetailsById(id)\r\n\t\tif (user) {\r\n\t\t\tdispatch(\r\n\t\t\t\tsetUser({\r\n\t\t\t\t\tname: user.name,\r\n\t\t\t\t\tabout: user.about,\r\n\t\t\t\t\temail: user.emailAddress,\r\n\t\t\t\t\timageUrl: user.imageUrl,\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn user\r\n\t} catch (err) {\r\n\t\tthrow err\r\n\t}\r\n}\r\n\r\nconst logoutUser = () => async dispatch => {\r\n\ttry {\r\n\t\tawait logoutUserFirebase()\r\n\t\tdispatch(unsetUser())\r\n\t} catch (err) {\r\n\t\tthrow err\r\n\t}\r\n}\r\n\r\nexport {\r\n\tsetUser,\r\n\tunsetUser,\r\n\tupdateUser,\r\n\tregisterUser,\r\n\tresolveAuthState,\r\n\tloginUser,\r\n\tlogoutUser,\r\n\tupdateUserAsync,\r\n\tloadUserFromId,\r\n}\r\n","H:\\freelancing\\avalink\\src\\firebase\\utils\\auth.utils.js",[],"H:\\freelancing\\avalink\\src\\firebase\\firebase.js",[],"H:\\freelancing\\avalink\\src\\pages\\dashboard\\dashboard.component.jsx",["168"],"H:\\freelancing\\avalink\\src\\components\\loading\\loading.component.jsx",[],"H:\\freelancing\\avalink\\src\\pages\\setting\\setting.component.jsx",[],"H:\\freelancing\\avalink\\src\\components\\logout\\logout.component.jsx",[],"H:\\freelancing\\avalink\\src\\components\\dashboard-header\\dashboard-header.component.jsx",[],"H:\\freelancing\\avalink\\src\\components\\dashboard-user\\dashboard-user.component.jsx",[],"H:\\freelancing\\avalink\\src\\components\\dashboard-links\\dashboard-links.component.jsx",["169","170","171","172"],"import React, { Component, createRef } from 'react'\r\n\r\nimport DashboardLinkItem from '../dashboard-link-item/dashboard-link-item.component'\r\nimport DashboardModal from '../dashboard-modal/dashboard-modal.component'\r\nimport vCardsJS from 'vcards-js'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n\tfetchLinks,\r\n\tsetQuickLinkAsync,\r\n\tunsetQuickLinkAsync,\r\n} from '../../redux/links/links.actions'\r\n\r\nimport './dashboard-links.styles.scss'\r\n\r\nclass DashboardLinks extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tshowModal: false,\r\n\t\t\tlinkEditorType: '',\r\n\t\t\tdisplayLinkEditor: false,\r\n\t\t\tremoveMode: false,\r\n\t\t}\r\n\t\tthis.vCardDownloadBtn = createRef()\r\n\t\tthis.imgRef = createRef()\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst { fetchLinks } = this.props\r\n\t\ttry {\r\n\t\t\tawait fetchLinks()\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t}\r\n\r\n\tshowModal = (show, opts) => {\r\n\t\tif (opts) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tshowModal: show,\r\n\t\t\t\tlinkEditorType: opts.linkEditorType || '',\r\n\t\t\t\tdisplayLinkEditor: opts.displayLinkEditor || false,\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tshowModal: show,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\ttoggleQuickLink = async () => {\r\n\t\tconst { quickLink, setQuickLinkAsync, unsetQuickLinkAsync } = this.props\r\n\t\ttry {\r\n\t\t\tif (quickLink) {\r\n\t\t\t\tawait unsetQuickLinkAsync()\r\n\t\t\t} else {\r\n\t\t\t\tawait setQuickLinkAsync()\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t}\r\n\tgenerateVCard = async () => {\r\n\t\tconst { user, match } = this.props\r\n\t\tconst { name, imageUrl, about, email } = user\r\n\r\n\t\tconst id = match.params.id\r\n\t\tconst cleanUrl = imageUrl.slice(0, imageUrl.indexOf('?'))\r\n\t\tconst type = cleanUrl.slice(cleanUrl.lastIndexOf('.') + 1)\r\n\t\tconst url =\r\n\t\t\twindow.location.origin + process.env.REACT_APP_PROFILE_URL + id\r\n\r\n\t\t// const canvas = document.createElement('canvas')\r\n\t\t// canvas.height = this.imgRef.current.naturalHeight\r\n\t\t// canvas.width = this.imgRef.current.naturalWidth\r\n\t\t// this.imgRef.current.crossOrigin = 'Anonymous'\r\n\r\n\t\t// const ctx = canvas.getContext('2d')\r\n\t\t// ctx.drawImage(this.imgRef.current, 0, 0)\r\n\t\t// const dataUrl = canvas.toDataURL()\r\n\t\t// console.log(dataUrl)\r\n\r\n\t\tconst vCard = vCardsJS()\r\n\t\tvCard.formattedName = name\r\n\t\t// vCard.photo.attachFromUrl(imageUrl, type.toUpperCase())\r\n\t\tvCard.url = url\r\n\t\tvCard.email = email\r\n\t\tvCard.source = url\r\n\t\tvCard.note = about\r\n\r\n\t\tconst blob = new Blob([vCard.getFormattedString()], {\r\n\t\t\ttype: 'text/vcard',\r\n\t\t})\r\n\t\tthis.vCardDownloadBtn.current.href = URL.createObjectURL(blob)\r\n\t\tthis.vCardDownloadBtn.current.click()\r\n\t}\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tremoveMode,\r\n\t\t\tshowModal,\r\n\t\t\tlinkEditorType,\r\n\t\t\tdisplayLinkEditor,\r\n\t\t} = this.state\r\n\t\tconst {\r\n\t\t\tlinks,\r\n\t\t\tquickLink,\r\n\t\t\tprofilePage,\r\n\t\t\tuser: { name, imageUrl },\r\n\t\t} = this.props\r\n\t\treturn (\r\n\t\t\t<div className='dashboard-links'>\r\n\t\t\t\t{/* CONTROLS */}\r\n\t\t\t\t{!profilePage && (\r\n\t\t\t\t\t<div className='mx-2 mx-sm-0 px-0 row mb-4'>\r\n\t\t\t\t\t\t<div className='col-6 col-md-4 offset-md-2'>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName={`btn ${\r\n\t\t\t\t\t\t\t\t\tremoveMode ? 'btn-dark' : 'btn-outline-dark'\r\n\t\t\t\t\t\t\t\t} mt-2 btn-block`}\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\tthis.setState(state => ({\r\n\t\t\t\t\t\t\t\t\t\tremoveMode: !state.removeMode,\r\n\t\t\t\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t{removeMode ? 'Done' : 'Edit links'}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='col-6 col-md-4'>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName='btn btn-outline-dark mt-2 btn-block'\r\n\t\t\t\t\t\t\t\tonClick={this.toggleQuickLink}>\r\n\t\t\t\t\t\t\t\t{quickLink ? (\r\n\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fas fa-check-square mr-2' />\r\n\t\t\t\t\t\t\t\t\t\tQuick Link Enabled\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t'Enable Quick Link'\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{/* LINKS */}\r\n\t\t\t\t<div className='link-grid'>\r\n\t\t\t\t\t{!removeMode && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tref={this.imgRef}\r\n\t\t\t\t\t\t\t\tsrc={imageUrl}\r\n\t\t\t\t\t\t\t\tclassName='d-none'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\tclassName='d-none'\r\n\t\t\t\t\t\t\t\tref={this.vCardDownloadBtn}\r\n\t\t\t\t\t\t\t\thref='#'\r\n\t\t\t\t\t\t\t\tdownload={`${name}.vcf`}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<DashboardLinkItem\r\n\t\t\t\t\t\t\t\tonClick={this.generateVCard}\r\n\t\t\t\t\t\t\t\ttype={'contact'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{links.map(link => (\r\n\t\t\t\t\t\t<DashboardLinkItem\r\n\t\t\t\t\t\t\tkey={link.type}\r\n\t\t\t\t\t\t\tshowModal={this.showModal}\r\n\t\t\t\t\t\t\tlinkBtn\r\n\t\t\t\t\t\t\ttype={link.type}\r\n\t\t\t\t\t\t\tremoveMode={removeMode}\r\n\t\t\t\t\t\t\tprofilePage={profilePage}\r\n\t\t\t\t\t\t\tquickLink={quickLink}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t{!profilePage && !removeMode && (\r\n\t\t\t\t\t\t<DashboardLinkItem\r\n\t\t\t\t\t\t\tmodalBtn\r\n\t\t\t\t\t\t\tshowModal={this.showModal}\r\n\t\t\t\t\t\t\ttype={'new link'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<DashboardModal\r\n\t\t\t\t\t\tshow={showModal}\r\n\t\t\t\t\t\tshowModal={this.showModal}\r\n\t\t\t\t\t\tdisplayLinkEditor={displayLinkEditor}\r\n\t\t\t\t\t\tlinkEditorType={linkEditorType}\r\n\t\t\t\t\t\tprofilePage={profilePage}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tuser: state.user,\r\n\tlinks: state.links.userLinks,\r\n\tquickLink: state.links.quickLink,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tfetchLinks: () => dispatch(fetchLinks()),\r\n\tsetQuickLinkAsync: () => dispatch(setQuickLinkAsync()),\r\n\tunsetQuickLinkAsync: () => dispatch(unsetQuickLinkAsync()),\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(withRouter(DashboardLinks))\r\n","H:\\freelancing\\avalink\\src\\components\\dashboard-link-item\\dashboard-link-item.component.jsx",["173","174","175"],"import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { removeLink } from '../../redux/links/links.actions'\r\n\r\nimport './dashboard-link-item.styles.scss'\r\n\r\nclass DashboardLinkItem extends Component {\r\n\tremoveHandler = async () => {\r\n\t\tconst { type, removeLink } = this.props\r\n\t\ttry {\r\n\t\t\tawait removeLink(type)\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tchecked,\r\n\t\t\tmodalBtn,\r\n\t\t\tlinkBtn,\r\n\t\t\tshowModal,\r\n\t\t\tonClick,\r\n\t\t\tnoIcon,\r\n\t\t\ttype,\r\n\t\t\tremoveMode,\r\n\t\t\tprofilePage,\r\n\t\t\tquickLink,\r\n\t\t\tgetLinkFromType,\r\n\t\t} = this.props\r\n\r\n\t\tif (profilePage && quickLink) {\r\n\t\t\treturn (\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName='dashboard-link-item'\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tif (onClick) {\r\n\t\t\t\t\t\t\tonClick()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t{!noIcon && (\r\n\t\t\t\t\t\t<a href={getLinkFromType(type)} target='_blank'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={`/icons/${type}.png`}\r\n\t\t\t\t\t\t\t\tclassName='icon-img img-fluid'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<p className='link-title text-center m-0 pt-1'>{type}</p>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={`dashboard-link-item ${\r\n\t\t\t\t\tremoveMode ? 'remove-mode' : ''\r\n\t\t\t\t}`}\r\n\t\t\t\tdata-toggle='modal'\r\n\t\t\t\tdata-target={`${modalBtn ? '#myModal' : '#addLinkModal'}`}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tif (removeMode) return\r\n\t\t\t\t\tif (modalBtn && showModal) {\r\n\t\t\t\t\t\tshowModal(true, {\r\n\t\t\t\t\t\t\tdisplayLinkEditor: false,\r\n\t\t\t\t\t\t\tlinkEditorType: '',\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else if (linkBtn) {\r\n\t\t\t\t\t\tshowModal(true, {\r\n\t\t\t\t\t\t\tdisplayLinkEditor: true,\r\n\t\t\t\t\t\t\tlinkEditorType: type,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// run any custom onclick prop\r\n\t\t\t\t\tif (onClick) {\r\n\t\t\t\t\t\tonClick()\r\n\t\t\t\t\t}\r\n\t\t\t\t}}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t\t{!noIcon && (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={`/icons/${type}.png`}\r\n\t\t\t\t\t\tclassName='icon-img img-fluid'\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t{removeMode && (\r\n\t\t\t\t\t<i\r\n\t\t\t\t\t\tclassName='fas fa-times remove-icon'\r\n\t\t\t\t\t\tonClick={this.removeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t{checked && <i className='fas fa-check check-icon' />}\r\n\t\t\t\t<p className='link-title text-center m-0 pt-1'>{type}</p>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nconst mapStateToProps = state => ({\r\n\tgetLinkFromType: type => {\r\n\t\tconst found = state.links.userLinks.find(link => link.type === type)\r\n\t\tif (found) {\r\n\t\t\treturn found.link\r\n\t\t}\r\n\t},\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n\tremoveLink: type => dispatch(removeLink(type)),\r\n})\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(withRouter(DashboardLinkItem))\r\n","H:\\freelancing\\avalink\\src\\components\\dashboard-modal\\dashboard-modal.component.jsx",["176"],"import React, { Component } from 'react'\r\n\r\nimport './dashboard-modal.styles.scss'\r\nimport LinkEditor from './link-editor.component'\r\nimport LinkOptions from './link-options.component'\r\n\r\nclass DashboardModal extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t}\r\n\topenLinkEditor = type => {\r\n\t\tconst { showModal } = this.props\r\n\t\tshowModal(true, {\r\n\t\t\tdisplayLinkEditor: true,\r\n\t\t\tlinkEditorType: type,\r\n\t\t})\r\n\t}\r\n\tcloseLinkEditor = () => {\r\n\t\tconst { showModal } = this.props\r\n\t\tshowModal(true, {\r\n\t\t\tdisplayLinkEditor: false,\r\n\t\t\tlinkEditorType: '',\r\n\t\t})\r\n\t}\r\n\tcloseModal = () => {\r\n\t\tconst { showModal } = this.props\r\n\t\tshowModal(false)\r\n\t}\r\n\tcomponentWillUnmount() {}\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tshow,\r\n\t\t\tdisplayLinkEditor,\r\n\t\t\tlinkEditorType,\r\n\t\t\tcustom,\r\n\t\t\tprofilePage,\r\n\t\t} = this.props\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`black-screen ${show ? 'show' : 'hide'}`}\r\n\t\t\t\t\tonClick={this.closeModal}></div>\r\n\t\t\t\t<div className={`dashboard-modal ${show ? 'show' : 'hide'}`}>\r\n\t\t\t\t\t<div className='dashboard-modal-content'>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName='fas fa-times close-icon'\r\n\t\t\t\t\t\t\tonClick={this.closeModal}></i>\r\n\r\n\t\t\t\t\t\t{custom && this.props.children}\r\n\r\n\t\t\t\t\t\t{!custom &&\r\n\t\t\t\t\t\t\t(displayLinkEditor ? (\r\n\t\t\t\t\t\t\t\t<LinkEditor\r\n\t\t\t\t\t\t\t\t\tkey={show}\r\n\t\t\t\t\t\t\t\t\tcloseModal={this.closeModal}\r\n\t\t\t\t\t\t\t\t\tcloseLinkEditor={this.closeLinkEditor}\r\n\t\t\t\t\t\t\t\t\ttype={linkEditorType}\r\n\t\t\t\t\t\t\t\t\tprofilePage={profilePage}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t!profilePage && (\r\n\t\t\t\t\t\t\t\t\t<LinkOptions\r\n\t\t\t\t\t\t\t\t\t\topenLinkEditor={this.openLinkEditor}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default DashboardModal\r\n","H:\\freelancing\\avalink\\src\\components\\dashboard-modal\\link-editor.component.jsx",["177"],"import { useState } from 'react'\r\nimport { updateLink } from '../../redux/links/links.actions'\r\nimport { connect } from 'react-redux'\r\n\r\nconst LinkEditor = ({\r\n\ttype,\r\n\tcloseLinkEditor,\r\n\tcloseModal,\r\n\tupdateLink,\r\n\tgetLinkFromType,\r\n\tprofilePage,\r\n}) => {\r\n\tconst [link, setLink] = useState(getLinkFromType(type) || '')\r\n\r\n\tconst saveLink = async e => {\r\n\t\te.preventDefault()\r\n\t\ttry {\r\n\t\t\tawait updateLink(type, link)\r\n\t\t\tcloseModal()\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!profilePage && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='btn btn-dark'\r\n\t\t\t\t\t\tonClick={() => closeLinkEditor()}>\r\n\t\t\t\t\t\t<i className='fas fa-chevron-left' /> Back\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t\t<h4 className='text-capitalize pb-2 pb-md-4'>{type}</h4>\r\n\t\t\t<form onSubmit={saveLink}>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t{profilePage ? (\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tplaceholder={`paste your ${type} profile link here`}\r\n\t\t\t\t\t\t\tonChange={e => setLink(e.target.value)}\r\n\t\t\t\t\t\t\tdefaultValue={link}\r\n\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tplaceholder={`paste your ${type} profile link here`}\r\n\t\t\t\t\t\t\tonChange={e => setLink(e.target.value)}\r\n\t\t\t\t\t\t\tdefaultValue={link}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t{!profilePage && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName='btn btn-danger px-5'\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tcloseModal()\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</button>{' '}\r\n\t\t\t\t\t\t<button className='btn btn-dark px-5'>Save</button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t{profilePage && (\r\n\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t<div className='col-6 col-md-4 offset-md-2'>\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\tclassName='btn btn-dark btn-block'\r\n\t\t\t\t\t\t\t\thref={link}\r\n\t\t\t\t\t\t\t\ttarget='_blank'>\r\n\t\t\t\t\t\t\t\tOpen in new tab\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='col-6 col-md-4'>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName='btn btn-dark btn-block'\r\n\t\t\t\t\t\t\t\thref={link}\r\n\t\t\t\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\twindow.navigator.clipboard.writeText(link)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ttype='button'>\r\n\t\t\t\t\t\t\t\tCopy Link\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tlinks: state.links.userLinks,\r\n\tgetLinkFromType: type => {\r\n\t\tconst found = state.links.userLinks.find(link => link.type === type)\r\n\t\tif (found) {\r\n\t\t\treturn found.link\r\n\t\t}\r\n\t},\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tupdateLink: (type, link) => dispatch(updateLink(type, link)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LinkEditor)\r\n","H:\\freelancing\\avalink\\src\\components\\dashboard-modal\\link-options.component.jsx",["178","179"],"import DashboardLinkItem from '../dashboard-link-item/dashboard-link-item.component'\r\nimport { useState, useEffect } from 'react'\r\n\r\nimport { fetchDefaultLinks } from '../../redux/links/links.actions'\r\nimport { connect } from 'react-redux'\r\n\r\nconst LinkOptions = ({\r\n\topenLinkEditor,\r\n\tfetchDefaultLinks,\r\n\tdefaultLinksLoaded,\r\n\tdefaultLinks,\r\n\tuserLinks,\r\n}) => {\r\n\tconst [fetching, setFetching] = useState(false)\r\n\r\n\tuseEffect(async () => {\r\n\t\tif (!defaultLinksLoaded) {\r\n\t\t\tsetFetching(true)\r\n\t\t\ttry {\r\n\t\t\t\tawait fetchDefaultLinks()\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t}\r\n\t\t\tsetFetching(false)\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>Add a social link to your profile</h4>\r\n\t\t\t<hr />\r\n\t\t\t<div className='link-grid'>\r\n\t\t\t\t{fetching && <h5>Loading...</h5>}\r\n\t\t\t\t{defaultLinks.map(item => {\r\n\t\t\t\t\tconst userAddedAlready =\r\n\t\t\t\t\t\tuserLinks.findIndex(\r\n\t\t\t\t\t\t\tuserLink => userLink.type === item.type\r\n\t\t\t\t\t\t) !== -1\r\n\t\t\t\t\tif (!userAddedAlready) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<DashboardLinkItem\r\n\t\t\t\t\t\t\t\tkey={item.type}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\topenLinkEditor(item.type)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\ttype={item.type}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<DashboardLinkItem\r\n\t\t\t\t\t\t\t\tkey={item.type}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\topenLinkEditor(item.type)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\ttype={item.type}\r\n\t\t\t\t\t\t\t\tchecked\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tuserLinks: state.links.userLinks,\r\n\tdefaultLinks: state.links.defaultLinks,\r\n\tdefaultLinksLoaded: state.links.defaultLinksLoaded,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tfetchDefaultLinks: () => dispatch(fetchDefaultLinks()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LinkOptions)\r\n","H:\\freelancing\\avalink\\src\\firebase\\utils\\firestore.utils.js",[],"H:\\freelancing\\avalink\\src\\redux\\links\\links.reducer.js",[],"H:\\freelancing\\avalink\\src\\redux\\links\\links.types.js",[],"H:\\freelancing\\avalink\\src\\redux\\links\\links.actions.js",[],"H:\\freelancing\\avalink\\src\\pages\\edit-profile\\edit-profile.component.jsx",["180","181"],"H:\\freelancing\\avalink\\src\\components\\dashboard-user\\profile-details.component.jsx",["182","183","184"],"import React, { Component, useState, useEffect, createRef } from 'react'\r\nimport DashboardModal from '../../components/dashboard-modal/dashboard-modal.component'\r\n\r\nimport './profile-details.styles.scss'\r\nimport { getId } from '../../firebase/utils/firestore.utils'\r\n\r\nimport { toast } from 'react-toastify'\r\n\r\nconst createProflieUrl = id =>\r\n\twindow.location.origin + process.env.REACT_APP_PROFILE_URL + id\r\n\r\nconst QrView = ({ id }) => {\r\n\tconst imageContainerRef = createRef()\r\n\tuseEffect(() => {\r\n\t\tconst typeNumber = 4\r\n\t\tconst errorCorrectionLevel = 'L'\r\n\t\tconst qr = window.qrcode(typeNumber, errorCorrectionLevel)\r\n\t\tqr.addData(createProflieUrl(id))\r\n\t\tqr.make()\r\n\t\timageContainerRef.current.innerHTML = qr.createSvgTag()\r\n\t}, [])\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4 className='text-center'>Share your profile link</h4>\r\n\t\t\t<hr />\r\n\t\t\t<div className='qr-container' ref={imageContainerRef}></div>\r\n\t\t\t<p className='text-center'>\r\n\t\t\t\tScan this QR code using any QR scanner app/camera.\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst LinkView = ({ id }) => {\r\n\tconst linkRef = createRef()\r\n\tconst link = createProflieUrl(id)\r\n\tconst copyLink = async () => {\r\n\t\tawait navigator.clipboard.writeText(link)\r\n\t\ttoast.success('Link copied to clipboard.', {\r\n\t\t\tautoClose: 2000,\r\n\t\t})\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>Your Profile link</h4>\r\n\t\t\t<hr />\r\n\t\t\t<p\r\n\t\t\t\tclassName='profile-link-container'\r\n\t\t\t\tref={linkRef}\r\n\t\t\t\tonClick={copyLink}>\r\n\t\t\t\t{link}\r\n\t\t\t</p>\r\n\t\t\t<div className='row pb-3'>\r\n\t\t\t\t<div className='col-6 col-md-4 offset-md-2'>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref={link}\r\n\t\t\t\t\t\tclassName='btn btn-dark btn-block'\r\n\t\t\t\t\t\ttarget='_blank'>\r\n\t\t\t\t\t\tOpen in new tab\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-6 col-md-4'>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='btn btn-dark btn-block'\r\n\t\t\t\t\t\tonClick={copyLink}>\r\n\t\t\t\t\t\tCopy Link\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nclass ProfileDetails extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tshow: false,\r\n\t\t\tdisplayQr: false,\r\n\t\t\tid: '',\r\n\t\t}\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\tconst { profilePage } = this.props\r\n\t\tif (!profilePage) {\r\n\t\t\tthis.setState({ id: await getId() })\r\n\t\t}\r\n\t}\r\n\tshowModal = show => {\r\n\t\tconsole.log(show)\r\n\t\tthis.setState({ show })\r\n\t}\r\n\tviewQr = () => {\r\n\t\tthis.showModal(true)\r\n\t\tthis.setState({ displayQr: true })\r\n\t}\r\n\tviewLink = () => {\r\n\t\tthis.showModal(true)\r\n\t\tthis.setState({ displayQr: false })\r\n\t}\r\n\trender() {\r\n\t\tconst { name, about, imageUrl, email, profilePage } = this.props\r\n\t\tconst { id, show, displayQr } = this.state\r\n\t\treturn (\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<div className='col-sm-4 display-image'>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={imageUrl ? imageUrl : '/user.png'}\r\n\t\t\t\t\t\talt='user display'\r\n\t\t\t\t\t\tonError={e => {\r\n\t\t\t\t\t\t\te.target.onerror = null\r\n\t\t\t\t\t\t\te.target.src = '/user.png'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-sm-6'>\r\n\t\t\t\t\t<h3 className='text-capitalize mt-1 profile-name'>\r\n\t\t\t\t\t\t{name}\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t{!profilePage && <p className='profile-email'>{email}</p>}\r\n\t\t\t\t\t<p className='profile-about'>{about}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t{!profilePage && (\r\n\t\t\t\t\t<div className='col-sm-2 qr-and-link-contianer'>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclassName='qr-icon'\r\n\t\t\t\t\t\t\tsrc={'/icons/qrcode.png'}\r\n\t\t\t\t\t\t\talt='QR icon'\r\n\t\t\t\t\t\t\tonClick={this.viewQr}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName='fas fa-link link-icon'\r\n\t\t\t\t\t\t\tonClick={this.viewLink}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t<DashboardModal show={show} showModal={this.showModal} custom>\r\n\t\t\t\t\t{displayQr ? <QrView id={id} /> : <LinkView id={id} />}\r\n\t\t\t\t</DashboardModal>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ProfileDetails\r\n","H:\\freelancing\\avalink\\src\\components\\dashboard-user\\edit-profile.component.jsx",[],"H:\\freelancing\\avalink\\src\\pages\\edit-profile\\inline-link-editor.component.jsx",["185"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass InlineLinkEditor extends React.Component {\r\n\trender() {\r\n\t\tconst { type, link, updateLink } = this.props\r\n\t\treturn (\r\n\t\t\t<div className='inline-link-editor'>\r\n\t\t\t\t<img src={`/icons/${type}.png`} className='icon' />\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder={`${type} profile link`}\r\n\t\t\t\t\t\tonChange={e => updateLink(type, e.target.value)}\r\n\t\t\t\t\t\tvalue={link}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<i\r\n\t\t\t\t\tclassName='fas fa-times text-danger fa-2x p-1 ml-3 clear-icon'\r\n\t\t\t\t\tonClick={() => updateLink(type, '')}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tgetLinkFromType: type => {\r\n\t\tconst found = state.links.userLinks.find(link => link.type === type)\r\n\t\tif (found) {\r\n\t\t\treturn found.link\r\n\t\t}\r\n\t},\r\n})\r\n\r\nexport default connect(mapStateToProps)(InlineLinkEditor)\r\n","H:\\freelancing\\avalink\\src\\pages\\change-password\\change-password.component.jsx",[],"H:\\freelancing\\avalink\\src\\firebase\\utils\\firebase-storage.utils.js",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":22,"column":4,"nodeType":"192","messageId":"193","endLine":22,"endColumn":11},{"ruleId":"190","severity":1,"message":"194","line":70,"column":4,"nodeType":"192","messageId":"193","endLine":70,"endColumn":14},{"ruleId":"190","severity":1,"message":"195","line":69,"column":11,"nodeType":"192","messageId":"193","endLine":69,"endColumn":21},{"ruleId":"190","severity":1,"message":"196","line":69,"column":9,"nodeType":"192","messageId":"193","endLine":69,"endColumn":13},{"ruleId":"197","severity":1,"message":"198","line":148,"column":8,"nodeType":"199","endLine":152,"endColumn":10},{"ruleId":"200","severity":1,"message":"201","line":153,"column":8,"nodeType":"199","endLine":158,"endColumn":10},{"ruleId":"202","severity":1,"message":"203","line":153,"column":8,"nodeType":"199","endLine":158,"endColumn":10},{"ruleId":"204","severity":1,"message":"205","line":43,"column":39,"nodeType":"206","endLine":43,"endColumn":54},{"ruleId":"197","severity":1,"message":"198","line":44,"column":8,"nodeType":"199","endLine":47,"endColumn":10},{"ruleId":"197","severity":1,"message":"198","line":81,"column":6,"nodeType":"199","endLine":84,"endColumn":8},{"ruleId":"207","severity":1,"message":"208","line":8,"column":2,"nodeType":"209","messageId":"210","endLine":10,"endColumn":3},{"ruleId":"204","severity":1,"message":"205","line":80,"column":9,"nodeType":"206","endLine":80,"endColumn":24},{"ruleId":"211","severity":1,"message":"212","line":16,"column":12,"nodeType":"213","endLine":26,"endColumn":3},{"ruleId":"211","severity":1,"message":"214","line":26,"column":5,"nodeType":"215","endLine":26,"endColumn":7,"suggestions":"216"},{"ruleId":"190","severity":1,"message":"217","line":46,"column":4,"nodeType":"192","messageId":"193","endLine":46,"endColumn":8},{"ruleId":"190","severity":1,"message":"218","line":47,"column":4,"nodeType":"192","messageId":"193","endLine":47,"endColumn":9},{"ruleId":"190","severity":1,"message":"219","line":1,"column":28,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},{"ruleId":"211","severity":1,"message":"220","line":21,"column":5,"nodeType":"215","endLine":21,"endColumn":7,"suggestions":"221"},{"ruleId":"204","severity":1,"message":"205","line":58,"column":7,"nodeType":"206","endLine":58,"endColumn":22},{"ruleId":"197","severity":1,"message":"198","line":9,"column":5,"nodeType":"199","endLine":9,"endColumn":56},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","'loggedUser' is assigned a value but never used.","'userExists' is assigned a value but never used.","'type' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'defaultLinksLoaded' and 'fetchDefaultLinks'. Either include them or remove the dependency array. If 'fetchDefaultLinks' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["224"],"'name' is assigned a value but never used.","'about' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'imageContainerRef'. Either include them or remove the dependency array.",["225"],"no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},"Update the dependencies array to be: [defaultLinksLoaded, fetchDefaultLinks]",{"range":"230","text":"231"},"Update the dependencies array to be: [id, imageContainerRef]",{"range":"232","text":"233"},[617,619],"[defaultLinksLoaded, fetchDefaultLinks]",[735,737],"[id, imageContainerRef]"]