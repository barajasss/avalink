[{"H:\\freelancing\\avalink\\src\\index.js":"1","H:\\freelancing\\avalink\\src\\App.js":"2","H:\\freelancing\\avalink\\src\\reportWebVitals.js":"3","H:\\freelancing\\avalink\\src\\redux\\store.js":"4","H:\\freelancing\\avalink\\src\\redux\\root.reducer.js":"5","H:\\freelancing\\avalink\\src\\redux\\user\\user.reducer.js":"6","H:\\freelancing\\avalink\\src\\components\\router\\router.component.jsx":"7","H:\\freelancing\\avalink\\src\\pages\\home\\home.component.jsx":"8","H:\\freelancing\\avalink\\src\\pages\\register\\register.component.jsx":"9","H:\\freelancing\\avalink\\src\\components\\logo\\logo.component.jsx":"10","H:\\freelancing\\avalink\\src\\components\\input\\input.component.jsx":"11","H:\\freelancing\\avalink\\src\\pages\\login\\login.component.jsx":"12","H:\\freelancing\\avalink\\src\\pages\\forgot-password\\forgot-password.component.jsx":"13","H:\\freelancing\\avalink\\src\\redux\\user\\user.types.js":"14","H:\\freelancing\\avalink\\src\\redux\\user\\user.actions.js":"15","H:\\freelancing\\avalink\\src\\firebase\\utils\\auth.utils.js":"16","H:\\freelancing\\avalink\\src\\firebase\\firebase.js":"17","H:\\freelancing\\avalink\\src\\pages\\dashboard\\dashboard.component.jsx":"18","H:\\freelancing\\avalink\\src\\components\\loading\\loading.component.jsx":"19","H:\\freelancing\\avalink\\src\\pages\\setting\\setting.component.jsx":"20","H:\\freelancing\\avalink\\src\\components\\logout\\logout.component.jsx":"21","H:\\freelancing\\avalink\\src\\components\\dashboard-header\\dashboard-header.component.jsx":"22","H:\\freelancing\\avalink\\src\\components\\dashboard-user\\dashboard-user.component.jsx":"23","H:\\freelancing\\avalink\\src\\components\\dashboard-links\\dashboard-links.component.jsx":"24","H:\\freelancing\\avalink\\src\\components\\dashboard-link-item\\dashboard-link-item.component.jsx":"25","H:\\freelancing\\avalink\\src\\components\\dashboard-modal\\dashboard-modal.component.jsx":"26","H:\\freelancing\\avalink\\src\\components\\dashboard-modal\\link-editor.component.jsx":"27","H:\\freelancing\\avalink\\src\\components\\dashboard-modal\\link-options.component.jsx":"28","H:\\freelancing\\avalink\\src\\firebase\\utils\\firestore.utils.js":"29","H:\\freelancing\\avalink\\src\\redux\\links\\links.reducer.js":"30","H:\\freelancing\\avalink\\src\\redux\\links\\links.types.js":"31","H:\\freelancing\\avalink\\src\\redux\\links\\links.actions.js":"32","H:\\freelancing\\avalink\\src\\pages\\edit-profile\\edit-profile.component.jsx":"33","H:\\freelancing\\avalink\\src\\components\\dashboard-user\\profile-details.component.jsx":"34","H:\\freelancing\\avalink\\src\\components\\dashboard-user\\edit-profile.component.jsx":"35","H:\\freelancing\\avalink\\src\\pages\\edit-profile\\inline-link-editor.component.jsx":"36","H:\\freelancing\\avalink\\src\\pages\\change-password\\change-password.component.jsx":"37","H:\\freelancing\\avalink\\src\\firebase\\utils\\firebase-storage.utils.js":"38","H:\\freelancing\\avalink\\src\\components\\error-boundary\\error-boundary.component.jsx":"39","H:\\freelancing\\avalink\\src\\firebase\\utils\\userDefaults.js":"40","H:\\freelancing\\avalink\\src\\firebase\\utils\\defaultLinks.js":"41","H:\\freelancing\\avalink\\src\\components\\tooltip\\tooltip.component.jsx":"42","H:\\freelancing\\avalink\\src\\components\\image-cropper\\image-cropper.component.jsx":"43"},{"size":695,"mtime":1608218384196,"results":"44","hashOfConfig":"45"},{"size":2412,"mtime":1608178164238,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":1607511334675,"results":"47","hashOfConfig":"45"},{"size":276,"mtime":1608007783828,"results":"48","hashOfConfig":"45"},{"size":253,"mtime":1608083660849,"results":"49","hashOfConfig":"45"},{"size":971,"mtime":1608346629371,"results":"50","hashOfConfig":"45"},{"size":2119,"mtime":1608218413245,"results":"51","hashOfConfig":"45"},{"size":3478,"mtime":1608224326035,"results":"52","hashOfConfig":"45"},{"size":8771,"mtime":1608380822529,"results":"53","hashOfConfig":"45"},{"size":316,"mtime":1608294792701,"results":"54","hashOfConfig":"45"},{"size":2127,"mtime":1608380402019,"results":"55","hashOfConfig":"45"},{"size":3430,"mtime":1608380779700,"results":"56","hashOfConfig":"45"},{"size":2342,"mtime":1608349280126,"results":"57","hashOfConfig":"45"},{"size":190,"mtime":1608027256206,"results":"58","hashOfConfig":"45"},{"size":3708,"mtime":1608379771306,"results":"59","hashOfConfig":"45"},{"size":1908,"mtime":1608380157857,"results":"60","hashOfConfig":"45"},{"size":517,"mtime":1608200044722,"results":"61","hashOfConfig":"45"},{"size":3171,"mtime":1608358246787,"results":"62","hashOfConfig":"45"},{"size":765,"mtime":1608380846285,"results":"63","hashOfConfig":"45"},{"size":1334,"mtime":1608217269545,"results":"64","hashOfConfig":"45"},{"size":1051,"mtime":1608052687900,"results":"65","hashOfConfig":"45"},{"size":1721,"mtime":1608344216858,"results":"66","hashOfConfig":"45"},{"size":1169,"mtime":1608208302821,"results":"67","hashOfConfig":"45"},{"size":8361,"mtime":1608346100252,"results":"68","hashOfConfig":"45"},{"size":3435,"mtime":1608363420494,"results":"69","hashOfConfig":"45"},{"size":1672,"mtime":1608282718747,"results":"70","hashOfConfig":"45"},{"size":3349,"mtime":1608363542989,"results":"71","hashOfConfig":"45"},{"size":1797,"mtime":1608286199062,"results":"72","hashOfConfig":"45"},{"size":4811,"mtime":1608379978918,"results":"73","hashOfConfig":"45"},{"size":2139,"mtime":1608302537262,"results":"74","hashOfConfig":"45"},{"size":332,"mtime":1608207574788,"results":"75","hashOfConfig":"45"},{"size":4409,"mtime":1608302210957,"results":"76","hashOfConfig":"45"},{"size":5436,"mtime":1608381028377,"results":"77","hashOfConfig":"45"},{"size":4637,"mtime":1608370914744,"results":"78","hashOfConfig":"45"},{"size":3236,"mtime":1608377954681,"results":"79","hashOfConfig":"45"},{"size":1343,"mtime":1608342522615,"results":"80","hashOfConfig":"45"},{"size":3473,"mtime":1608380666924,"results":"81","hashOfConfig":"45"},{"size":940,"mtime":1608378494694,"results":"82","hashOfConfig":"45"},{"size":685,"mtime":1608218662029,"results":"83","hashOfConfig":"45"},{"size":1540,"mtime":1608355230833,"results":"84","hashOfConfig":"45"},{"size":6762,"mtime":1608303392972,"results":"85","hashOfConfig":"45"},{"size":872,"mtime":1608293134946,"results":"86","hashOfConfig":"45"},{"size":1656,"mtime":1608378799505,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"68q5jj",{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"H:\\freelancing\\avalink\\src\\index.js",[],["186","187"],"H:\\freelancing\\avalink\\src\\App.js",["188"],"import React from 'react'\nimport Router from './components/router/router.component'\nimport firebase from './firebase/firebase'\nimport { Slide, ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport Loading from './components/loading/loading.component'\nimport { Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport {\n\tloginUser,\n\tsetUser,\n\tunsetUser,\n\tresolveAuthState,\n} from './redux/user/user.actions'\n\nimport './App.css'\n\nclass App extends React.Component {\n\tcomponentDidMount = () => {\n\t\tconst {\n\t\t\tsetUser,\n\t\t\tunsetUser,\n\t\t\tresolveAuthState,\n\t\t\tlocation,\n\t\t\tloginUser,\n\t\t} = this.props\n\t\tthis.unsubscribe = firebase.auth().onAuthStateChanged(async user => {\n\t\t\tconsole.log(user, location)\n\t\t\tif (user) {\n\t\t\t\tif (location.state && location.state.from === 'register') {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst { displayName: name, email, uid } = user\n\t\t\t\tawait loginUser({ name, email, uid }, true)\n\t\t\t} else {\n\t\t\t\tunsetUser()\n\t\t\t}\n\t\t\tresolveAuthState()\n\t\t})\n\t}\n\tcomponentWillUnmount() {\n\t\tthis.unsubscribe()\n\t}\n\trender() {\n\t\tconst { isLoggedIn, location, authStateResolved } = this.props\n\t\tconst allowedRoutes = [\n\t\t\t'/setting',\n\t\t\t'/settings',\n\t\t\t'/dashboard',\n\t\t\t'/edit-profile',\n\t\t\t'/register',\n\t\t\t'/change-password',\n\t\t]\n\t\t// Redirect logic for logged users\n\t\tif (\n\t\t\tauthStateResolved &&\n\t\t\tisLoggedIn &&\n\t\t\t!location.pathname.match(/\\/u\\/.+/) &&\n\t\t\t!allowedRoutes.includes(location.pathname) &&\n\t\t\t!location.state\n\t\t) {\n\t\t\treturn <Redirect to='/dashboard' />\n\t\t}\n\n\t\tif (authStateResolved) {\n\t\t\treturn (\n\t\t\t\t<div className='App'>\n\t\t\t\t\t<ToastContainer\n\t\t\t\t\t\tposition='top-right'\n\t\t\t\t\t\tautoClose={3500}\n\t\t\t\t\t\tnewestOnTop={true}\n\t\t\t\t\t\ttransition={Slide}\n\t\t\t\t\t/>\n\t\t\t\t\t<Router />\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Loading />\n\t\t\t\t\t<ToastContainer\n\t\t\t\t\t\tposition='top-right'\n\t\t\t\t\t\tautoClose={3500}\n\t\t\t\t\t\tnewestOnTop={true}\n\t\t\t\t\t\ttransition={Slide}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tisLoggedIn: state.user.isLoggedIn,\n\tauthStateResolved: state.user.authStateResolved,\n})\n\nconst mapDispatchToProps = dispatch => ({\n\tsetUser: user => dispatch(setUser(user)),\n\tunsetUser: () => dispatch(unsetUser()),\n\tresolveAuthState: () => dispatch(resolveAuthState()),\n\tloginUser: (user, opt) => dispatch(loginUser(user, opt)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App))\n","H:\\freelancing\\avalink\\src\\reportWebVitals.js",[],"H:\\freelancing\\avalink\\src\\redux\\store.js",[],"H:\\freelancing\\avalink\\src\\redux\\root.reducer.js",[],"H:\\freelancing\\avalink\\src\\redux\\user\\user.reducer.js",[],"H:\\freelancing\\avalink\\src\\components\\router\\router.component.jsx",[],"H:\\freelancing\\avalink\\src\\pages\\home\\home.component.jsx",["189","190","191"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Logo from '../../components/logo/logo.component'\r\n\r\nimport { Helmet } from 'react-helmet'\r\nimport './home.styles.scss'\r\n\r\nexport default class HomePage extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Helmet>\r\n\t\t\t\t\t<title>{process.env.REACT_APP_PRODUCT_NAME} | Home</title>\r\n\t\t\t\t</Helmet>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName='jumbotron jumbotron-fluid py-4 bg-dark text-white'\r\n\t\t\t\t\tstyle={{ backgroundImage: `url('/images/star sky.jpg')` }}>\r\n\t\t\t\t\t<div className='home-logo-container mb-2'>\r\n\t\t\t\t\t\t<Logo border />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h1 className='text-center'>\r\n\t\t\t\t\t\tWelcome to {process.env.REACT_APP_PRODUCT_NAME}\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<div className='d-flex flex-row justify-content-center mt-4'>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto='/register'\r\n\t\t\t\t\t\t\tclassName='btn btn-outline-light home-button'>\r\n\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<span className='mx-3'></span>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto='/login'\r\n\t\t\t\t\t\t\tclassName='btn btn-outline-light home-button'>\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='container text-center'>\r\n\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t<div className='col-md-6 feature-text-container'>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h3>All accounts in one place</h3>\r\n\t\t\t\t\t\t\t\t<p className='lead pt-2'>\r\n\t\t\t\t\t\t\t\t\tStore and manage all your social media links\r\n\t\t\t\t\t\t\t\t\tand acounts in one place.\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='col-md-6 p-4'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc='/images/all in one.jpg'\r\n\t\t\t\t\t\t\t\tclassName='img-fluid feature-images'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t<div className='col-md-6 p-4'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc='/images/qr code.jpg'\r\n\t\t\t\t\t\t\t\tclassName='img-fluid feature-images'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='col-md-6 feature-text-container'>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h3>Share with QR or Link</h3>\r\n\t\t\t\t\t\t\t\t<p className='lead pt-2'>\r\n\t\t\t\t\t\t\t\t\tYou can easily share your account profile\r\n\t\t\t\t\t\t\t\t\tusing the QR code or link share feature. It\r\n\t\t\t\t\t\t\t\t\tis extremely helpful!\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t<div className='col-md-6 feature-text-container'>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h3>Extremely easy to use</h3>\r\n\t\t\t\t\t\t\t\t<p className='lead pt-2'>\r\n\t\t\t\t\t\t\t\t\tIt is no brainer to use our{' '}\r\n\t\t\t\t\t\t\t\t\t{process.env.REACT_APP_PRODUCT_NAME} app.\r\n\t\t\t\t\t\t\t\t\tSimple and intuitive design for everyone.\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='col-md-6 p-4'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc='/images/dashboard.jpg'\r\n\t\t\t\t\t\t\t\tclassName='img-fluid feature-images'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='footer'>\r\n\t\t\t\t\t<div className='container py-3'>\r\n\t\t\t\t\t\t<h3 className='text-white text-center'>\r\n\t\t\t\t\t\t\tStart Using Today. Its Free!\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t<div className='col-6 col-md-4 offset-md-2'>\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tclassName='btn btn-outline-light btn-block'\r\n\t\t\t\t\t\t\t\t\tto='/register'>\r\n\t\t\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='col-6 col-md-4'>\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tclassName='btn btn-outline-light btn-block'\r\n\t\t\t\t\t\t\t\t\tto='/login'>\r\n\t\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<h6 className='text-center text-white'>\r\n\t\t\t\t\t\t\tCopyright &copy; {new Date().getFullYear()}\r\n\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","H:\\freelancing\\avalink\\src\\pages\\register\\register.component.jsx",[],"H:\\freelancing\\avalink\\src\\components\\logo\\logo.component.jsx",[],"H:\\freelancing\\avalink\\src\\components\\input\\input.component.jsx",[],"H:\\freelancing\\avalink\\src\\pages\\login\\login.component.jsx",[],"H:\\freelancing\\avalink\\src\\pages\\forgot-password\\forgot-password.component.jsx",[],"H:\\freelancing\\avalink\\src\\redux\\user\\user.types.js",[],"H:\\freelancing\\avalink\\src\\redux\\user\\user.actions.js",["192","193"],"H:\\freelancing\\avalink\\src\\firebase\\utils\\auth.utils.js",[],"H:\\freelancing\\avalink\\src\\firebase\\firebase.js",[],"H:\\freelancing\\avalink\\src\\pages\\dashboard\\dashboard.component.jsx",["194"],"import React, { Component } from 'react'\r\n\r\nimport { Helmet } from 'react-helmet'\r\n\r\nimport { Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport DashboardHeader from '../../components/dashboard-header/dashboard-header.component'\r\nimport DashboardUser from '../../components/dashboard-user/dashboard-user.component'\r\nimport DashboardLinks from '../../components/dashboard-links/dashboard-links.component'\r\nimport Loading from '../../components/loading/loading.component'\r\n\r\nimport { loadUserFromId } from '../../redux/user/user.actions'\r\nimport {\r\n\tfetchLinksById,\r\n\tfetchDefaultLinks,\r\n} from '../../redux/links/links.actions'\r\nimport { incrementTotalProfileLinks } from '../../firebase/utils/firestore.utils'\r\n\r\nimport './dashboard.styles.scss'\r\n\r\nclass Dashboard extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tuserExists: false,\r\n\t\t\tloading: false,\r\n\t\t}\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\tconst {\r\n\t\t\tprofilePage,\r\n\t\t\tmatch,\r\n\t\t\tloadUserFromId,\r\n\t\t\tfetchLinksById,\r\n\t\t\tfetchDefaultLinks,\r\n\t\t\tisLoggedIn,\r\n\t\t\thistory,\r\n\t\t} = this.props\r\n\r\n\t\tconst id = match.params.id\r\n\r\n\t\tif (!isLoggedIn && profilePage) {\r\n\t\t\tawait incrementTotalProfileLinks(id)\r\n\t\t}\r\n\r\n\t\tif (profilePage) {\r\n\t\t\t// load and fetch all the user details if the user is not logged in.\r\n\t\t\tthis.setState({ loading: true })\r\n\t\t\tconst id = match.params.id\r\n\t\t\ttry {\r\n\t\t\t\tconst data = await loadUserFromId(id)\r\n\t\t\t\tawait fetchLinksById(0, data)\r\n\t\t\t\tawait fetchDefaultLinks()\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tthis.setState({ userExists: true })\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// user does not exist\r\n\t\t\t\t\treturn history.push('/register')\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// some other error\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t\tthis.setState({ userExists: false })\r\n\t\t\t\treturn history.push('/register')\r\n\t\t\t}\r\n\t\t\tthis.setState({ loading: false })\r\n\t\t} else {\r\n\t\t\t// the app component loads all the data if the user is logged in.\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tconst { isLoggedIn, profilePage, quickLink } = this.props\r\n\t\tconst { userExists, loading } = this.state\r\n\t\tif (loading && profilePage) {\r\n\t\t\treturn <Loading />\r\n\t\t}\r\n\t\tif (!isLoggedIn && !profilePage) {\r\n\t\t\treturn <Redirect to='/' />\r\n\t\t}\r\n\t\tif (quickLink && profilePage) {\r\n\t\t\treturn <DashboardLinks profilePage={profilePage} />\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className='dashboard'>\r\n\t\t\t\t<Helmet>\r\n\t\t\t\t\t<title>\r\n\t\t\t\t\t\t{process.env.REACT_APP_PRODUCT_NAME} | Dashboard\r\n\t\t\t\t\t</title>\r\n\t\t\t\t</Helmet>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='col-md-8 offset-md-2'>\r\n\t\t\t\t\t\t<DashboardHeader profilePage={profilePage} />\r\n\t\t\t\t\t\t<DashboardUser profilePage={profilePage} />\r\n\t\t\t\t\t\t<DashboardLinks profilePage={profilePage} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tisLoggedIn: state.user.isLoggedIn,\r\n\tquickLink: state.links.quickLink,\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n\tloadUserFromId: id => dispatch(loadUserFromId(id)),\r\n\tfetchLinksById: (id, data) => dispatch(fetchLinksById(id, data)),\r\n\tfetchDefaultLinks: () => dispatch(fetchDefaultLinks()),\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(withRouter(Dashboard))\r\n","H:\\freelancing\\avalink\\src\\components\\loading\\loading.component.jsx",[],"H:\\freelancing\\avalink\\src\\pages\\setting\\setting.component.jsx",[],"H:\\freelancing\\avalink\\src\\components\\logout\\logout.component.jsx",[],"H:\\freelancing\\avalink\\src\\components\\dashboard-header\\dashboard-header.component.jsx",[],"H:\\freelancing\\avalink\\src\\components\\dashboard-user\\dashboard-user.component.jsx",[],"H:\\freelancing\\avalink\\src\\components\\dashboard-links\\dashboard-links.component.jsx",["195","196","197","198","199","200"],"import React, { Component, createRef } from 'react'\r\n\r\nimport DashboardLinkItem from '../dashboard-link-item/dashboard-link-item.component'\r\nimport DashboardModal from '../dashboard-modal/dashboard-modal.component'\r\nimport vCardsJS from 'vcards-js'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n\tfetchLinks,\r\n\tsetQuickLinkAsync,\r\n\tunsetQuickLinkAsync,\r\n\tupdateMultipleLinks,\r\n} from '../../redux/links/links.actions'\r\n\r\nimport { ReactSortable } from 'react-sortablejs'\r\n\r\nimport './dashboard-links.styles.scss'\r\n\r\nclass DashboardLinks extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tshowModal: false,\r\n\t\t\tlinkEditorType: '',\r\n\t\t\tdisplayLinkEditor: false,\r\n\t\t\tremoveMode: false,\r\n\t\t\tsortedLinks: [],\r\n\t\t\tlinksToDelete: [],\r\n\t\t\tvCardDownloaded: false,\r\n\t\t}\r\n\t\tthis.vCardDownloadBtn = createRef()\r\n\t\tthis.imgRef = createRef()\r\n\t\tthis.saveButton = createRef()\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst { fetchLinks, quickLink } = this.props\r\n\t\ttry {\r\n\t\t\tconst links = await fetchLinks()\r\n\t\t\tthis.setState({ sortedLinks: links.filter(link => link.data) })\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t\tif (quickLink) {\r\n\t\t\tthis.generateVCard()\r\n\t\t\tthis.setState({ vCardDownloaded: true })\r\n\t\t}\r\n\t}\r\n\tshowModal = (show, opts) => {\r\n\t\tif (opts) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tshowModal: show,\r\n\t\t\t\tlinkEditorType: opts.linkEditorType || '',\r\n\t\t\t\tdisplayLinkEditor: opts.displayLinkEditor || false,\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tshowModal: show,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\ttoggleQuickLink = async () => {\r\n\t\tconst { quickLink, setQuickLinkAsync, unsetQuickLinkAsync } = this.props\r\n\t\ttry {\r\n\t\t\tif (quickLink) {\r\n\t\t\t\tawait unsetQuickLinkAsync()\r\n\t\t\t} else {\r\n\t\t\t\tawait setQuickLinkAsync()\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t}\r\n\tsaveEdits = async orderedLinks => {\r\n\t\tconst { links, updateMultipleLinks } = this.props\r\n\t\tconst { linksToDelete } = this.state\r\n\t\t// update the position orders of the links\r\n\t\torderedLinks.map((item, index) => {\r\n\t\t\titem.order = index\r\n\t\t\treturn item\r\n\t\t})\r\n\t\tlet processedLinks = links.map((item, index) => {\r\n\t\t\t// update item if any ordered Link is found\r\n\t\t\tconst orderedItem = orderedLinks.find(\r\n\t\t\t\torderedLink => orderedLink.name === item.name\r\n\t\t\t)\r\n\t\t\tif (orderedItem) {\r\n\t\t\t\titem.order = orderedItem.order\r\n\t\t\t}\r\n\t\t\treturn item\r\n\t\t})\r\n\t\t// remove links\r\n\t\tprocessedLinks = processedLinks.filter(link => {\r\n\t\t\tif (linksToDelete.find(name => name === link.name)) {\r\n\t\t\t\tlink.data = ''\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tawait updateMultipleLinks(processedLinks)\r\n\t\t\tthis.setState({ linksToDelete: [], sortedLinks: links })\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t}\r\n\tgenerateVCard = async () => {\r\n\t\tconst { user, match } = this.props\r\n\t\tconst { name, imageUrl, about, email } = user\r\n\r\n\t\tconst id = match.params.id\r\n\t\tconst url =\r\n\t\t\twindow.location.origin + process.env.REACT_APP_PROFILE_URL + id\r\n\r\n\t\tconst vCard = vCardsJS()\r\n\t\tvCard.formattedName = name\r\n\t\t// vCard.photo.attachFromUrl(imageUrl, type.toUpperCase())\r\n\t\tvCard.url = url\r\n\t\tvCard.email = email\r\n\t\tvCard.source = url\r\n\t\tvCard.note = about\r\n\r\n\t\tconst blob = new Blob([vCard.getFormattedString()], {\r\n\t\t\ttype: 'text/vcard',\r\n\t\t})\r\n\t\tthis.vCardDownloadBtn.current.href = URL.createObjectURL(blob)\r\n\t\tthis.vCardDownloadBtn.current.click()\r\n\t}\r\n\tremoveSortedLink = name => {\r\n\t\t// edit sorted link\r\n\t\tthis.setState(state => ({\r\n\t\t\tsortedLinks: state.sortedLinks.filter(link => link.name !== name),\r\n\t\t\tlinksToDelete: [...state.linksToDelete, name],\r\n\t\t}))\r\n\t}\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tremoveMode,\r\n\t\t\tshowModal,\r\n\t\t\tlinkEditorType,\r\n\t\t\tdisplayLinkEditor,\r\n\t\t\tsortedLinks,\r\n\t\t\tvCardDownloaded,\r\n\t\t} = this.state\r\n\t\tconst {\r\n\t\t\tlinks,\r\n\t\t\tquickLink,\r\n\t\t\tprofilePage,\r\n\t\t\tuser: { name, imageUrl },\r\n\t\t} = this.props\r\n\r\n\t\tif (profilePage && quickLink) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h4 className='text-center m-5'>\r\n\t\t\t\t\t\t{vCardDownloaded\r\n\t\t\t\t\t\t\t? 'VCard downloaded. You can now close this window.'\r\n\t\t\t\t\t\t\t: 'Please wait for the VCard to Download.'}\r\n\t\t\t\t\t</h4>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\tclassName='d-none'\r\n\t\t\t\t\t\tref={this.vCardDownloadBtn}\r\n\t\t\t\t\t\thref='#'\r\n\t\t\t\t\t\tdownload={`${name}.vcf`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className='dashboard-links'>\r\n\t\t\t\t{/* CONTROLS */}\r\n\t\t\t\t{!profilePage && (\r\n\t\t\t\t\t<div className='mx-2 mx-sm-0 px-0 row mb-4'>\r\n\t\t\t\t\t\t<div className='col-6 col-md-4 offset-md-2'>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tref={this.saveButton}\r\n\t\t\t\t\t\t\t\tclassName={`dashboard-button btn ${\r\n\t\t\t\t\t\t\t\t\tremoveMode ? 'btn-dark' : 'btn-outline-dark'\r\n\t\t\t\t\t\t\t\t} mt-2 btn-block`}\r\n\t\t\t\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\t\t\t\tif (removeMode) {\r\n\t\t\t\t\t\t\t\t\t\tawait this.saveEdits(sortedLinks)\r\n\t\t\t\t\t\t\t\t\t\tthis.saveButton.current.textContent =\r\n\t\t\t\t\t\t\t\t\t\t\t'Saving...'\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t// fetch the latest links data\r\n\t\t\t\t\t\t\t\t\t\tthis.setState(state => ({\r\n\t\t\t\t\t\t\t\t\t\t\tsortedLinks: this.props.links.filter(\r\n\t\t\t\t\t\t\t\t\t\t\t\tlink => link.data\r\n\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// restore state\r\n\t\t\t\t\t\t\t\t\tthis.setState(state => ({\r\n\t\t\t\t\t\t\t\t\t\tremoveMode: !state.removeMode,\r\n\t\t\t\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{removeMode ? 'Save' : 'Shift'}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='col-6 col-md-4'>\r\n\t\t\t\t\t\t\t{removeMode ? (\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName='dashboard-button btn btn-info mt-2 btn-block'\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t// reset sortedLinks state\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tsortedLinks: this.props.links.filter(\r\n\t\t\t\t\t\t\t\t\t\t\t\tlink => link.data\r\n\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t\tlinksToDelete: [],\r\n\t\t\t\t\t\t\t\t\t\t\tremoveMode: false,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName='dashboard-button btn btn-outline-dark mt-2 btn-block'\r\n\t\t\t\t\t\t\t\t\tonClick={this.toggleQuickLink}>\r\n\t\t\t\t\t\t\t\t\t{quickLink ? (\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-check-square mr-2' />\r\n\t\t\t\t\t\t\t\t\t\t\tQuick Link On\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t'Quick Link Off'\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* LINKS */}\r\n\t\t\t\t<div className={`${removeMode ? '' : 'link-grid'}`}>\r\n\t\t\t\t\t{!removeMode && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tref={this.imgRef}\r\n\t\t\t\t\t\t\t\tsrc={imageUrl}\r\n\t\t\t\t\t\t\t\tclassName='d-none'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\tclassName='d-none'\r\n\t\t\t\t\t\t\t\tref={this.vCardDownloadBtn}\r\n\t\t\t\t\t\t\t\thref='#'\r\n\t\t\t\t\t\t\t\tdownload={`${name}.vcf`}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{removeMode ? (\r\n\t\t\t\t\t\t<ReactSortable\r\n\t\t\t\t\t\t\tlist={sortedLinks}\r\n\t\t\t\t\t\t\tsetList={newState =>\r\n\t\t\t\t\t\t\t\tthis.setState({ sortedLinks: newState })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tclassName='link-grid'\r\n\t\t\t\t\t\t\tanimation={200}>\r\n\t\t\t\t\t\t\t{sortedLinks.map(link => (\r\n\t\t\t\t\t\t\t\t<DashboardLinkItem\r\n\t\t\t\t\t\t\t\t\tkey={link.name}\r\n\t\t\t\t\t\t\t\t\tshowModal={this.showModal}\r\n\t\t\t\t\t\t\t\t\tlinkBtn\r\n\t\t\t\t\t\t\t\t\tname={link.name}\r\n\t\t\t\t\t\t\t\t\tremoveMode={removeMode}\r\n\t\t\t\t\t\t\t\t\tremoveFunc={this.removeSortedLink}\r\n\t\t\t\t\t\t\t\t\tprofilePage={profilePage}\r\n\t\t\t\t\t\t\t\t\tquickLink={quickLink}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ReactSortable>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tlinks.map(\r\n\t\t\t\t\t\t\tlink =>\r\n\t\t\t\t\t\t\t\tlink.data && (\r\n\t\t\t\t\t\t\t\t\t<DashboardLinkItem\r\n\t\t\t\t\t\t\t\t\t\tkey={link.name}\r\n\t\t\t\t\t\t\t\t\t\tshowModal={this.showModal}\r\n\t\t\t\t\t\t\t\t\t\tlinkBtn\r\n\t\t\t\t\t\t\t\t\t\tname={link.name}\r\n\t\t\t\t\t\t\t\t\t\tremoveMode={removeMode}\r\n\t\t\t\t\t\t\t\t\t\tprofilePage={profilePage}\r\n\t\t\t\t\t\t\t\t\t\tquickLink={quickLink}\r\n\t\t\t\t\t\t\t\t\t\tgenerateVCard={this.generateVCard}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{!profilePage && !removeMode && (\r\n\t\t\t\t\t\t<DashboardLinkItem\r\n\t\t\t\t\t\t\tmodalBtn\r\n\t\t\t\t\t\t\tshowModal={this.showModal}\r\n\t\t\t\t\t\t\tname={'new link'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<DashboardModal\r\n\t\t\t\t\t\tshow={showModal}\r\n\t\t\t\t\t\tshowModal={this.showModal}\r\n\t\t\t\t\t\tdisplayLinkEditor={displayLinkEditor}\r\n\t\t\t\t\t\tlinkEditorType={linkEditorType}\r\n\t\t\t\t\t\tprofilePage={profilePage}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tuser: state.user,\r\n\tlinks: state.links.userLinks,\r\n\tquickLink: state.links.quickLink,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tfetchLinks: () => dispatch(fetchLinks()),\r\n\tsetQuickLinkAsync: () => dispatch(setQuickLinkAsync()),\r\n\tunsetQuickLinkAsync: () => dispatch(unsetQuickLinkAsync()),\r\n\tupdateMultipleLinks: links => dispatch(updateMultipleLinks(links)),\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(withRouter(DashboardLinks))\r\n","H:\\freelancing\\avalink\\src\\components\\dashboard-link-item\\dashboard-link-item.component.jsx",["201","202","203","204","205","206","207","208","209","210","211"],"import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { updateLink } from '../../redux/links/links.actions'\r\n\r\nimport './dashboard-link-item.styles.scss'\r\n\r\nclass DashboardLinkItem extends Component {\r\n\tremoveHandler = async () => {\r\n\t\tconst { name, removeFunc } = this.props\r\n\t\ttry {\r\n\t\t\t// await removeLink(name)\r\n\t\t\tremoveFunc(name)\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t}\r\n\thandleClick = async () => {\r\n\t\tconst {\r\n\t\t\tname,\r\n\t\t\tremoveMode,\r\n\t\t\tgenerateVCard,\r\n\t\t\tupdateLink,\r\n\t\t\tshowModal,\r\n\t\t\tonClick,\r\n\t\t\tmodalBtn,\r\n\t\t\tlinkBtn,\r\n\t\t\tprofilePage,\r\n\t\t} = this.props\r\n\r\n\t\tif (removeMode) return\r\n\r\n\t\tif (name === 'contact') {\r\n\t\t\tif (generateVCard) {\r\n\t\t\t\tgenerateVCard()\r\n\t\t\t}\r\n\t\t\tawait updateLink(name, 'card')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (modalBtn && showModal) {\r\n\t\t\tshowModal(true, {\r\n\t\t\t\tdisplayLinkEditor: false,\r\n\t\t\t\tlinkEditorType: '',\r\n\t\t\t})\r\n\t\t} else if (linkBtn) {\r\n\t\t\tshowModal(true, {\r\n\t\t\t\tdisplayLinkEditor: true,\r\n\t\t\t\tlinkEditorType: name,\r\n\t\t\t})\r\n\t\t}\r\n\t\t// run any custom onclick prop\r\n\t\tif (onClick) {\r\n\t\t\tonClick()\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tchecked,\r\n\t\t\tmodalBtn,\r\n\t\t\tlinkBtn,\r\n\t\t\tshowModal,\r\n\t\t\tonClick,\r\n\t\t\tnoIcon,\r\n\t\t\tname,\r\n\t\t\tremoveMode,\r\n\t\t\tprofilePage,\r\n\t\t\tquickLink,\r\n\t\t\tgetUserLink,\r\n\t\t\tgetLinkMeta,\r\n\t\t\thide,\r\n\t\t\tgenerateVCard,\r\n\t\t\tupdateLink,\r\n\t\t} = this.props\r\n\t\tconst linkMeta = getLinkMeta(name)\r\n\t\tif (profilePage) {\r\n\t\t\treturn (\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName='dashboard-link-item'\r\n\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\tif (onClick) {\r\n\t\t\t\t\t\t\tonClick()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (name === 'contact' && !profilePage) {\r\n\t\t\t\t\t\t\tif (generateVCard) {\r\n\t\t\t\t\t\t\t\tgenerateVCard()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t{!noIcon && name !== 'contact' && (\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\thref={linkMeta.linkPrefix + getUserLink(name).data}\r\n\t\t\t\t\t\t\ttarget='_blank'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={`/icons/${name}.png`}\r\n\t\t\t\t\t\t\t\tclassName='icon-img img-fluid'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{name === 'contact' && (\r\n\t\t\t\t\t\t<a href='#' onClick={generateVCard}>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={`/icons/${name}.png`}\r\n\t\t\t\t\t\t\t\tclassName='icon-img img-fluid'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<p className='link-title text-center m-0 pt-1'>\r\n\t\t\t\t\t\t{(linkMeta && linkMeta.displayName) || name}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={`dashboard-link-item ${\r\n\t\t\t\t\tremoveMode ? 'remove-mode' : ''\r\n\t\t\t\t}`}\r\n\t\t\t\tdata-toggle='modal'\r\n\t\t\t\tdata-target={`${modalBtn ? '#myModal' : '#addLinkModal'}`}\r\n\t\t\t\tonClick={this.handleClick}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t\t{!noIcon && (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={`/icons/${name}.png`}\r\n\t\t\t\t\t\tclassName='icon-img img-fluid'\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t{removeMode && (\r\n\t\t\t\t\t<i\r\n\t\t\t\t\t\tclassName='fas fa-times remove-icon'\r\n\t\t\t\t\t\tonClick={this.removeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t{checked && <i className='fas fa-check check-icon' />}\r\n\t\t\t\t<p className='link-title text-center m-0 pt-1'>\r\n\t\t\t\t\t{(linkMeta && linkMeta.displayName) || name}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nconst mapStateToProps = state => ({\r\n\tgetUserLink: name => state.links.userLinks.find(link => link.name === name),\r\n\tgetLinkMeta: name =>\r\n\t\tstate.links.defaultLinks.find(link => link.name === name),\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n\tupdateLink: (name, link) => dispatch(updateLink(name, link)),\r\n})\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(withRouter(DashboardLinkItem))\r\n","H:\\freelancing\\avalink\\src\\components\\dashboard-modal\\dashboard-modal.component.jsx",["212"],"import React, { Component } from 'react'\r\n\r\nimport './dashboard-modal.styles.scss'\r\nimport LinkEditor from './link-editor.component'\r\nimport LinkOptions from './link-options.component'\r\n\r\nclass DashboardModal extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t}\r\n\topenLinkEditor = name => {\r\n\t\tconst { showModal } = this.props\r\n\t\tshowModal(true, {\r\n\t\t\tdisplayLinkEditor: true,\r\n\t\t\tlinkEditorType: name,\r\n\t\t})\r\n\t}\r\n\tcloseLinkEditor = () => {\r\n\t\tconst { showModal } = this.props\r\n\t\tshowModal(true, {\r\n\t\t\tdisplayLinkEditor: false,\r\n\t\t\tlinkEditorType: '',\r\n\t\t})\r\n\t}\r\n\tcloseModal = () => {\r\n\t\tconst { showModal } = this.props\r\n\t\tshowModal(false)\r\n\t}\r\n\tcomponentWillUnmount() {}\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tshow,\r\n\t\t\tdisplayLinkEditor,\r\n\t\t\tlinkEditorType,\r\n\t\t\tcustom,\r\n\t\t\tprofilePage,\r\n\t\t} = this.props\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`black-screen ${show ? 'show' : 'hide'}`}\r\n\t\t\t\t\tonClick={this.closeModal}></div>\r\n\t\t\t\t<div className={`dashboard-modal ${show ? 'show' : 'hide'}`}>\r\n\t\t\t\t\t<div className='dashboard-modal-content'>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName='fas fa-times close-icon'\r\n\t\t\t\t\t\t\tonClick={this.closeModal}></i>\r\n\r\n\t\t\t\t\t\t{custom && this.props.children}\r\n\r\n\t\t\t\t\t\t{!custom &&\r\n\t\t\t\t\t\t\t(displayLinkEditor ? (\r\n\t\t\t\t\t\t\t\t<LinkEditor\r\n\t\t\t\t\t\t\t\t\tkey={show}\r\n\t\t\t\t\t\t\t\t\tcloseModal={this.closeModal}\r\n\t\t\t\t\t\t\t\t\tcloseLinkEditor={this.closeLinkEditor}\r\n\t\t\t\t\t\t\t\t\tname={linkEditorType}\r\n\t\t\t\t\t\t\t\t\tprofilePage={profilePage}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t!profilePage && (\r\n\t\t\t\t\t\t\t\t\t<LinkOptions\r\n\t\t\t\t\t\t\t\t\t\topenLinkEditor={this.openLinkEditor}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default DashboardModal\r\n","H:\\freelancing\\avalink\\src\\components\\dashboard-modal\\link-editor.component.jsx",["213"],"import { useState } from 'react'\r\nimport { updateLink } from '../../redux/links/links.actions'\r\nimport { connect } from 'react-redux'\r\nimport Tooltip from '../tooltip/tooltip.component'\r\n\r\nconst LinkEditor = ({\r\n\tcloseLinkEditor,\r\n\tcloseModal,\r\n\tupdateLink,\r\n\tname,\r\n\tgetUserLink,\r\n\tgetLinkMeta,\r\n\tprofilePage,\r\n}) => {\r\n\tconst [link, setLink] = useState(\r\n\t\t(getUserLink(name) && getUserLink(name).data) || ''\r\n\t)\r\n\tconst linkMeta = getLinkMeta(name)\r\n\tconst saveLink = async e => {\r\n\t\te.preventDefault()\r\n\t\ttry {\r\n\t\t\tconsole.log(link)\r\n\t\t\tawait updateLink(name, link)\r\n\t\t\tcloseModal()\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!profilePage && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='btn btn-dark'\r\n\t\t\t\t\t\tonClick={() => closeLinkEditor()}>\r\n\t\t\t\t\t\t<i className='fas fa-chevron-left' /> Back\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t\t<h4 className='pb-2 pb-md-4'>Add {linkMeta.placeholder}.</h4>\r\n\t\t\t<form onSubmit={saveLink}>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t{profilePage ? (\r\n\t\t\t\t\t\t<></>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className='d-flex flex-row'>\r\n\t\t\t\t\t\t\t<div className='input-group h-100'>\r\n\t\t\t\t\t\t\t\t{linkMeta.prefixSign && (\r\n\t\t\t\t\t\t\t\t\t<div className='input-group-prepend'>\r\n\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='input-group-text'\r\n\t\t\t\t\t\t\t\t\t\t\tid='basic-addon1'>\r\n\t\t\t\t\t\t\t\t\t\t\t{linkMeta.prefixSign}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\t\tlinkMeta.placeholder ||\r\n\t\t\t\t\t\t\t\t\t\t`paste your ${name} profile link here`\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonChange={e => setLink(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tvalue={link}\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName='fas fa-times text-danger fa-2x p-1 ml-3 clear-icon'\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetLink('')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Tooltip data={linkMeta.linkInfo} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t{!profilePage && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName='btn btn-info px-3 mr-1'\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\twindow.open(\r\n\t\t\t\t\t\t\t\t\tlinkMeta.linkPrefix + link,\r\n\t\t\t\t\t\t\t\t\t'_blank'\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\tOpen Link\r\n\t\t\t\t\t\t</button>{' '}\r\n\t\t\t\t\t\t<button className='btn btn-dark px-4'>Save</button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t{profilePage && (\r\n\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t<div className='col-6 col-md-4 offset-md-2'>\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\tclassName='btn btn-dark btn-block'\r\n\t\t\t\t\t\t\t\thref={link}\r\n\t\t\t\t\t\t\t\ttarget='_blank'>\r\n\t\t\t\t\t\t\t\tOpen in new tab\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='col-6 col-md-4'>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName='btn btn-dark btn-block'\r\n\t\t\t\t\t\t\t\thref={link}\r\n\t\t\t\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\twindow.navigator.clipboard.writeText(link)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ttype='button'>\r\n\t\t\t\t\t\t\t\tCopy Link\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tlinks: state.links.userLinks,\r\n\tgetUserLink: name => state.links.userLinks.find(link => link.name === name),\r\n\tgetLinkMeta: name =>\r\n\t\tstate.links.defaultLinks.find(link => link.name === name),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tupdateLink: (name, link) => dispatch(updateLink(name, link)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LinkEditor)\r\n","H:\\freelancing\\avalink\\src\\components\\dashboard-modal\\link-options.component.jsx",["214","215"],"import DashboardLinkItem from '../dashboard-link-item/dashboard-link-item.component'\r\nimport { useState, useEffect } from 'react'\r\n\r\nimport { fetchDefaultLinks } from '../../redux/links/links.actions'\r\nimport { connect } from 'react-redux'\r\n\r\nconst LinkOptions = ({\r\n\topenLinkEditor,\r\n\tfetchDefaultLinks,\r\n\tdefaultLinksLoaded,\r\n\tdefaultLinks,\r\n\tuserLinks,\r\n}) => {\r\n\tconst [fetching, setFetching] = useState(false)\r\n\r\n\tuseEffect(async () => {\r\n\t\tif (!defaultLinksLoaded) {\r\n\t\t\tsetFetching(true)\r\n\t\t\ttry {\r\n\t\t\t\tawait fetchDefaultLinks()\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t}\r\n\t\t\tsetFetching(false)\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>Add a social link to your profile</h4>\r\n\t\t\t<hr />\r\n\t\t\t<div className='link-grid'>\r\n\t\t\t\t{fetching && <h5>Loading...</h5>}\r\n\t\t\t\t{defaultLinks.map(item => {\r\n\t\t\t\t\tconst userAddedAlready =\r\n\t\t\t\t\t\tuserLinks.findIndex(\r\n\t\t\t\t\t\t\tuserLink =>\r\n\t\t\t\t\t\t\t\tuserLink.data && userLink.name === item.name\r\n\t\t\t\t\t\t) !== -1\r\n\t\t\t\t\tif (!userAddedAlready) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<DashboardLinkItem\r\n\t\t\t\t\t\t\t\tkey={item.name}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\topenLinkEditor(item.name)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname={item.name}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<DashboardLinkItem\r\n\t\t\t\t\t\t\t\tkey={item.name}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\topenLinkEditor(item.name)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname={item.name}\r\n\t\t\t\t\t\t\t\tchecked\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tuserLinks: state.links.userLinks,\r\n\tdefaultLinks: state.links.defaultLinks,\r\n\tdefaultLinksLoaded: state.links.defaultLinksLoaded,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tfetchDefaultLinks: () => dispatch(fetchDefaultLinks()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LinkOptions)\r\n","H:\\freelancing\\avalink\\src\\firebase\\utils\\firestore.utils.js",[],"H:\\freelancing\\avalink\\src\\redux\\links\\links.reducer.js",[],"H:\\freelancing\\avalink\\src\\redux\\links\\links.types.js",[],"H:\\freelancing\\avalink\\src\\redux\\links\\links.actions.js",[],"H:\\freelancing\\avalink\\src\\pages\\edit-profile\\edit-profile.component.jsx",["216","217"],"H:\\freelancing\\avalink\\src\\components\\dashboard-user\\profile-details.component.jsx",["218","219","220","221","222"],"import React, { Component, useState, useEffect, createRef } from 'react'\r\nimport DashboardModal from '../../components/dashboard-modal/dashboard-modal.component'\r\n\r\nimport './profile-details.styles.scss'\r\nimport { getId } from '../../firebase/utils/firestore.utils'\r\n\r\nimport { toast } from 'react-toastify'\r\n\r\nconst createProflieUrl = id =>\r\n\twindow.location.origin + process.env.REACT_APP_PROFILE_URL + id\r\n\r\nconst QrView = ({ id, name, profilePage }) => {\r\n\tconst imageContainerRef = createRef()\r\n\tconst qrDownloadBtn = createRef()\r\n\r\n\tconst downloadQr = () => {\r\n\t\tconst typeNumber = 4\r\n\t\tconst errorCorrectionLevel = 'L'\r\n\t\tconst qr = window.qrcode(typeNumber, errorCorrectionLevel)\r\n\t\tqr.addData(createProflieUrl(id))\r\n\t\tqr.make()\r\n\t\tlet dataURL = qr.createDataURL(10)\r\n\t\tdataURL = dataURL.replace('gif', 'png')\r\n\t\tqrDownloadBtn.current.href = dataURL\r\n\t\tqrDownloadBtn.current.click()\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tconst typeNumber = 4\r\n\t\tconst errorCorrectionLevel = 'L'\r\n\t\tconst qr = window.qrcode(typeNumber, errorCorrectionLevel)\r\n\t\tqr.addData(createProflieUrl(id))\r\n\t\tqr.make()\r\n\t\timageContainerRef.current.innerHTML = qr.createSvgTag()\r\n\t}, [])\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4 className='text-center'>\r\n\t\t\t\t{profilePage\r\n\t\t\t\t\t? 'Scan this profile link'\r\n\t\t\t\t\t: 'Share your profile link'}\r\n\t\t\t</h4>\r\n\r\n\t\t\t<hr />\r\n\t\t\t<div className='qr-container' ref={imageContainerRef}></div>\r\n\t\t\t<p className='text-center'>\r\n\t\t\t\tScan this QR code using any QR scanner app/camera.\r\n\t\t\t</p>\r\n\t\t\t<div className='text-center' onClick={downloadQr}>\r\n\t\t\t\t<button className='btn btn-dark'>Download QR</button>\r\n\t\t\t</div>\r\n\t\t\t<a\r\n\t\t\t\tref={qrDownloadBtn}\r\n\t\t\t\thref='#'\r\n\t\t\t\tclassName='d-none'\r\n\t\t\t\tdownload={`${name} QR code`}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst LinkView = ({ id }) => {\r\n\tconst linkRef = createRef()\r\n\tconst link = createProflieUrl(id)\r\n\tconst copyLink = async () => {\r\n\t\tawait navigator.clipboard.writeText(link)\r\n\t\ttoast.success('Link copied to clipboard.', {\r\n\t\t\tautoClose: 2000,\r\n\t\t})\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>Your Profile link</h4>\r\n\t\t\t<hr />\r\n\t\t\t<p\r\n\t\t\t\tclassName='profile-link-container'\r\n\t\t\t\tref={linkRef}\r\n\t\t\t\tonClick={copyLink}>\r\n\t\t\t\t{link}\r\n\t\t\t</p>\r\n\t\t\t<div className='row pb-3'>\r\n\t\t\t\t<div className='col-6 col-md-4 offset-md-2'>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref={link}\r\n\t\t\t\t\t\tclassName='btn btn-dark btn-block'\r\n\t\t\t\t\t\ttarget='_blank'>\r\n\t\t\t\t\t\tOpen in new tab\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-6 col-md-4'>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='btn btn-dark btn-block'\r\n\t\t\t\t\t\tonClick={copyLink}>\r\n\t\t\t\t\t\tCopy Link\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nclass ProfileDetails extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tshow: false,\r\n\t\t\tdisplayQr: false,\r\n\t\t\tid: '',\r\n\t\t}\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\tconst { profilePage } = this.props\r\n\t\tif (!profilePage) {\r\n\t\t\tthis.setState({ id: await getId() })\r\n\t\t}\r\n\t}\r\n\tshowModal = show => {\r\n\t\tconsole.log(show)\r\n\t\tthis.setState({ show })\r\n\t}\r\n\tviewQr = () => {\r\n\t\tthis.showModal(true)\r\n\t\tthis.setState({ displayQr: true })\r\n\t}\r\n\tviewLink = () => {\r\n\t\tthis.showModal(true)\r\n\t\tthis.setState({ displayQr: false })\r\n\t}\r\n\trender() {\r\n\t\tconst { name, about, imageUrl, email, profilePage } = this.props\r\n\t\tconst { id, show, displayQr } = this.state\r\n\t\treturn (\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<div className='col-sm-4 display-image-container'>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName='display-image'\r\n\t\t\t\t\t\tsrc={imageUrl ? imageUrl : '/user.png'}\r\n\t\t\t\t\t\talt='user display'\r\n\t\t\t\t\t\tonError={e => {\r\n\t\t\t\t\t\t\te.target.onerror = null\r\n\t\t\t\t\t\t\te.target.src = '/user.png'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-sm-6'>\r\n\t\t\t\t\t<h3 className='text-capitalize mt-1 profile-name'>\r\n\t\t\t\t\t\t{name}\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t{!profilePage && <p className='profile-email'>{email}</p>}\r\n\t\t\t\t\t<p className='profile-about'>{about}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t{profilePage ? (\r\n\t\t\t\t\t<div className='col-sm-2 qr-and-link-contianer'>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclassName='qr-icon'\r\n\t\t\t\t\t\t\tsrc={'/icons/qrcode.png'}\r\n\t\t\t\t\t\t\talt='QR icon'\r\n\t\t\t\t\t\t\tonClick={this.viewQr}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className='col-sm-2 qr-and-link-contianer'>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclassName='qr-icon'\r\n\t\t\t\t\t\t\tsrc={'/icons/qrcode.png'}\r\n\t\t\t\t\t\t\talt='QR icon'\r\n\t\t\t\t\t\t\tonClick={this.viewQr}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName='fas fa-link link-icon'\r\n\t\t\t\t\t\t\tonClick={this.viewLink}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t<DashboardModal show={show} showModal={this.showModal} custom>\r\n\t\t\t\t\t{displayQr ? (\r\n\t\t\t\t\t\t<QrView id={id} name={name} profilePage />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<LinkView id={id} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</DashboardModal>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ProfileDetails\r\n","H:\\freelancing\\avalink\\src\\components\\dashboard-user\\edit-profile.component.jsx",["223"],"import './edit-profile.styles.scss'\r\nimport { useState, createRef } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport ImageCropper from '../image-cropper/image-cropper.component'\r\n\r\nconst EditProfile = ({\r\n\tusername,\r\n\tname,\r\n\tabout,\r\n\timageUrl,\r\n\tupdateName,\r\n\tupdateAbout,\r\n\tupdateFile,\r\n}) => {\r\n\tconst fileRef = createRef()\r\n\tconst imageRef = createRef()\r\n\tconst [fileType, setFileType] = useState('')\r\n\tconst [showCropper, setShowCropper] = useState(false)\r\n\tconst [dataUrl, setDataUrl] = useState('')\r\n\r\n\tconst openFilePicker = () => {\r\n\t\tfileRef.current.click()\r\n\t}\r\n\tconst cropImage = dataUrl => {\r\n\t\tsetShowCropper(false)\r\n\t\timageRef.current.src = dataUrl\r\n\t\tupdateFile(dataUrl, fileType)\r\n\t}\r\n\tconst uploadFile = e => {\r\n\t\tconst file = e.target.files[0]\r\n\t\tif (file) {\r\n\t\t\tconst reader = new FileReader()\r\n\t\t\treader.onload = () => {\r\n\t\t\t\tconsole.log('reader load')\r\n\t\t\t\timageRef.current.src = reader.result\r\n\t\t\t\tsetShowCropper(true)\r\n\t\t\t\tsetDataUrl(reader.result)\r\n\t\t\t\tsetFileType(file.type)\r\n\t\t\t\tupdateFile(reader.result, file.type)\r\n\t\t\t}\r\n\t\t\treader.readAsDataURL(file)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='px-3 edit-profile-dashboard'>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<div className='col-md-4 image-container'>\r\n\t\t\t\t\t<div className='display-image-container'>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclassName='display-image'\r\n\t\t\t\t\t\t\tref={imageRef}\r\n\t\t\t\t\t\t\tsrc={imageUrl ? imageUrl : '/user.png'}\r\n\t\t\t\t\t\t\talt='user display'\r\n\t\t\t\t\t\t\tonError={e => {\r\n\t\t\t\t\t\t\t\te.target.onerror = null\r\n\t\t\t\t\t\t\t\te.target.src = '/user.png'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName='btn btn-dark btn-sm'\r\n\t\t\t\t\t\t\tonClick={openFilePicker}>\r\n\t\t\t\t\t\t\tChange\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tref={fileRef}\r\n\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\taccept='image/*'\r\n\t\t\t\t\t\t\tclassName='d-none'\r\n\t\t\t\t\t\t\tonChange={uploadFile}\r\n\t\t\t\t\t\t\tonClick={e => (e.target.value = null)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{showCropper && (\r\n\t\t\t\t\t\t\t<ImageCropper\r\n\t\t\t\t\t\t\t\tkey={dataUrl}\r\n\t\t\t\t\t\t\t\tdataUrl={dataUrl}\r\n\t\t\t\t\t\t\t\tcropImage={cropImage}\r\n\t\t\t\t\t\t\t\tcancelCrop={() => setShowCropper(false)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-8 edit-profile-input-container'>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<label>Full Name</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\tonChange={e => updateName(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<label>Bio</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\tvalue={about}\r\n\t\t\t\t\t\t\t\tonChange={e => updateAbout(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<label>Your Profile URL</label>\r\n\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\tclassName='p-2'\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tbackground: '#dde',\r\n\t\t\t\t\t\t\t\t\tborderRadius: 5,\r\n\t\t\t\t\t\t\t\t\tcolor: '#777',\r\n\t\t\t\t\t\t\t\t\tcursor: 'not-allowed',\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{window.location.origin +\r\n\t\t\t\t\t\t\t\t\tprocess.env.REACT_APP_PROFILE_URL +\r\n\t\t\t\t\t\t\t\t\tusername}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tusername: state.user.username,\r\n})\r\n\r\nconst mapDispatchToProps = {}\r\n\r\nexport default connect(mapStateToProps)(EditProfile)\r\n","H:\\freelancing\\avalink\\src\\pages\\edit-profile\\inline-link-editor.component.jsx",["224"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Tooltip from '../../components/tooltip/tooltip.component'\r\n\r\nclass InlineLinkEditor extends React.Component {\r\n\trender() {\r\n\t\tconst { name, data, updateLink, getLinkMeta } = this.props\r\n\t\tconst linkMeta = getLinkMeta(name)\r\n\t\tif (name === 'contact') return <></>\r\n\t\treturn (\r\n\t\t\t<div className='inline-link-editor'>\r\n\t\t\t\t<img src={`/icons/${name}.png`} className='icon' />\r\n\t\t\t\t<div className='input-group h-100'>\r\n\t\t\t\t\t{linkMeta.prefixSign && (\r\n\t\t\t\t\t\t<div className='input-group-prepend'>\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName='input-group-text'\r\n\t\t\t\t\t\t\t\tid='basic-addon1'>\r\n\t\t\t\t\t\t\t\t{linkMeta.prefixSign}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\tlinkMeta.placeholder || `${name} profile link`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonChange={e => updateLink(name, e.target.value)}\r\n\t\t\t\t\t\tvalue={data}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<i\r\n\t\t\t\t\tclassName='fas fa-times text-danger fa-2x p-1 ml-3 clear-icon'\r\n\t\t\t\t\tonClick={() => updateLink(name, '')}\r\n\t\t\t\t/>\r\n\t\t\t\t<Tooltip data={linkMeta.linkInfo} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tgetLinkMeta: name =>\r\n\t\tstate.links.defaultLinks.find(link => link.name === name),\r\n})\r\n\r\nexport default connect(mapStateToProps)(InlineLinkEditor)\r\n","H:\\freelancing\\avalink\\src\\pages\\change-password\\change-password.component.jsx",[],"H:\\freelancing\\avalink\\src\\firebase\\utils\\firebase-storage.utils.js",[],"H:\\freelancing\\avalink\\src\\components\\error-boundary\\error-boundary.component.jsx",[],"H:\\freelancing\\avalink\\src\\firebase\\utils\\userDefaults.js",[],"H:\\freelancing\\avalink\\src\\firebase\\utils\\defaultLinks.js",[],"H:\\freelancing\\avalink\\src\\components\\tooltip\\tooltip.component.jsx",[],"H:\\freelancing\\avalink\\src\\components\\image-cropper\\image-cropper.component.jsx",["225","226"],{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":22,"column":4,"nodeType":"233","messageId":"234","endLine":22,"endColumn":11},{"ruleId":"235","severity":1,"message":"236","line":50,"column":8,"nodeType":"237","endLine":53,"endColumn":10},{"ruleId":"235","severity":1,"message":"236","line":58,"column":8,"nodeType":"237","endLine":61,"endColumn":10},{"ruleId":"235","severity":1,"message":"236","line":87,"column":8,"nodeType":"237","endLine":90,"endColumn":10},{"ruleId":"238","severity":1,"message":"239","line":85,"column":5,"nodeType":"240","messageId":"241","endLine":85,"endColumn":49},{"ruleId":"231","severity":1,"message":"242","line":90,"column":4,"nodeType":"233","messageId":"234","endLine":90,"endColumn":14},{"ruleId":"231","severity":1,"message":"243","line":74,"column":11,"nodeType":"233","messageId":"234","endLine":74,"endColumn":21},{"ruleId":"231","severity":1,"message":"244","line":108,"column":17,"nodeType":"233","messageId":"234","endLine":108,"endColumn":25},{"ruleId":"245","severity":1,"message":"246","line":159,"column":6,"nodeType":"237","endLine":164,"endColumn":8},{"ruleId":"247","severity":1,"message":"248","line":159,"column":6,"nodeType":"237","endLine":164,"endColumn":8},{"ruleId":"235","severity":1,"message":"236","line":239,"column":8,"nodeType":"237","endLine":243,"endColumn":10},{"ruleId":"245","severity":1,"message":"246","line":244,"column":8,"nodeType":"237","endLine":249,"endColumn":10},{"ruleId":"247","severity":1,"message":"248","line":244,"column":8,"nodeType":"237","endLine":249,"endColumn":10},{"ruleId":"231","severity":1,"message":"249","line":29,"column":4,"nodeType":"233","messageId":"234","endLine":29,"endColumn":15},{"ruleId":"231","severity":1,"message":"250","line":62,"column":4,"nodeType":"233","messageId":"234","endLine":62,"endColumn":11},{"ruleId":"231","severity":1,"message":"251","line":63,"column":4,"nodeType":"233","messageId":"234","endLine":63,"endColumn":13},{"ruleId":"231","severity":1,"message":"252","line":69,"column":4,"nodeType":"233","messageId":"234","endLine":69,"endColumn":13},{"ruleId":"231","severity":1,"message":"253","line":72,"column":4,"nodeType":"233","messageId":"234","endLine":72,"endColumn":8},{"ruleId":"231","severity":1,"message":"254","line":74,"column":4,"nodeType":"233","messageId":"234","endLine":74,"endColumn":14},{"ruleId":"255","severity":1,"message":"256","line":94,"column":8,"nodeType":"257","endLine":94,"endColumn":23},{"ruleId":"235","severity":1,"message":"236","line":95,"column":8,"nodeType":"237","endLine":98,"endColumn":10},{"ruleId":"247","severity":1,"message":"248","line":102,"column":7,"nodeType":"237","endLine":102,"endColumn":43},{"ruleId":"235","severity":1,"message":"236","line":103,"column":8,"nodeType":"237","endLine":106,"endColumn":10},{"ruleId":"235","severity":1,"message":"236","line":126,"column":6,"nodeType":"237","endLine":129,"endColumn":8},{"ruleId":"258","severity":1,"message":"259","line":8,"column":2,"nodeType":"260","messageId":"261","endLine":10,"endColumn":3},{"ruleId":"255","severity":1,"message":"256","line":103,"column":9,"nodeType":"257","endLine":103,"endColumn":24},{"ruleId":"262","severity":1,"message":"263","line":16,"column":12,"nodeType":"264","endLine":26,"endColumn":3},{"ruleId":"262","severity":1,"message":"265","line":26,"column":5,"nodeType":"266","endLine":26,"endColumn":7,"suggestions":"267"},{"ruleId":"231","severity":1,"message":"268","line":46,"column":4,"nodeType":"233","messageId":"234","endLine":46,"endColumn":8},{"ruleId":"231","severity":1,"message":"269","line":47,"column":4,"nodeType":"233","messageId":"234","endLine":47,"endColumn":9},{"ruleId":"231","severity":1,"message":"270","line":1,"column":28,"nodeType":"233","messageId":"234","endLine":1,"endColumn":36},{"ruleId":"262","severity":1,"message":"271","line":34,"column":5,"nodeType":"266","endLine":34,"endColumn":7,"suggestions":"272"},{"ruleId":"245","severity":1,"message":"246","line":51,"column":4,"nodeType":"237","endLine":56,"endColumn":6},{"ruleId":"247","severity":1,"message":"248","line":51,"column":4,"nodeType":"237","endLine":56,"endColumn":6},{"ruleId":"255","severity":1,"message":"256","line":85,"column":7,"nodeType":"257","endLine":85,"endColumn":22},{"ruleId":"231","severity":1,"message":"273","line":130,"column":7,"nodeType":"233","messageId":"234","endLine":130,"endColumn":25},{"ruleId":"235","severity":1,"message":"236","line":12,"column":5,"nodeType":"237","endLine":12,"endColumn":56},{"ruleId":"274","severity":1,"message":"275","line":36,"column":6,"nodeType":"237","endLine":41,"endColumn":8},{"ruleId":"235","severity":1,"message":"236","line":47,"column":7,"nodeType":"237","endLine":50,"endColumn":9},"no-native-reassign",["276"],"no-negated-in-lhs",["277"],"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'loggedUser' is assigned a value but never used.","'userExists' is assigned a value but never used.","'imageUrl' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'profilePage' is assigned a value but never used.","'linkBtn' is assigned a value but never used.","'showModal' is assigned a value but never used.","'quickLink' is assigned a value but never used.","'hide' is assigned a value but never used.","'updateLink' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'defaultLinksLoaded' and 'fetchDefaultLinks'. Either include them or remove the dependency array. If 'fetchDefaultLinks' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["278"],"'name' is assigned a value but never used.","'about' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'imageContainerRef'. Either include them or remove the dependency array.",["279"],"'mapDispatchToProps' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},"Update the dependencies array to be: [defaultLinksLoaded, fetchDefaultLinks]",{"range":"284","text":"285"},"Update the dependencies array to be: [id, imageContainerRef]",{"range":"286","text":"287"},[617,619],"[defaultLinksLoaded, fetchDefaultLinks]",[1150,1152],"[id, imageContainerRef]"]